[
    {
        "title": "Creating and deleting security groups",
        "content": "Creating and deleting security groups\nLimitations\n\nYou cannot delete a security group if it is assigned to a VM.\n\nTo create a security group\n\nOn the Security groups screen, click Add security group.\n\nIn the Add security group window, specify a name and description for the group, and then click Add.\n\nA description should not contain any personally identifiable information or sensitive business data.\n\nBy default, the new security group will deny all incoming traffic and allow only outgoing traffic to assigned virtual machines.\n\nTo delete a security group\n\nOn the Security groups screen, click the required security group.\nOn the group right pane, click Delete.\nClick Delete in the confirmation window.",
        "paragraphs": [],
        "cli_examples": [],
        "panel_examples": [],
        "url": "https://docs.virtuozzo.com/virtuozzo_hybrid_infrastructure_6_0_self_service_guide/creating-and-deleting-security-groups.html"
    },
    {
        "title": "Connecting to virtual machines",
        "content": "Connecting to virtual machines\nPrerequisites\n\nVirtual machines are created, as described in Creating virtual machines.\nTo be able to connect via SSH, the virtual machine must have cloud-init and OpenSSH installed. \n\nTo connect to a virtual machine via the VNC console\nSelect a VM, and then click Console on its right pane. The console will open in a separate browser window. In the console, you can send a key combination to a VM, take a screenshot of the console window, and download the console log (refer to Troubleshooting virtual machines).\nTo connect to a virtual machine via SSH\nSpecify the username and VM IP address in the SSH terminal:# ssh <username>@<VM_IP_address>\r\n\nLinux cloud images have the default login, depending on the operating system, for example, centos or ubuntu. To connect to a Windows VM, enter the username that you specified during Cloudbase-Init installation.\nIf you have deployed a VM without specifying an SSH key, you also need to enter a password to log in to the VM.",
        "paragraphs": [],
        "cli_examples": [],
        "panel_examples": [],
        "url": "https://docs.virtuozzo.com/virtuozzo_hybrid_infrastructure_6_0_self_service_guide/connecting-to-virtual-machines.html"
    },
    {
        "title": "Configuring virtual machine volumes",
        "content": "Configuring virtual machine volumes\nYou can add new volumes to your virtual machines, attach existing volumes, and detach unneeded volumes from virtual machines.\nLimitations\n\nYou cannot change, detach, or delete the boot volume.\nYou can only attach and detach non-boot volumes.\nYou cannot manage volumes of shelved VMs.\n\nPrerequisites\n\nTo be able to use volumes attached to VMs, they must be initialized inside the guest OS by standard means.\n\nTo attach a volume to a virtual machine\n\nOn the Virtual machines screen, click the required virtual machine.\nOn the Overview tab, click the pencil icon in the Disks field.\n\nIn the Volumes window:\n\nClick Attach to attach an existing volume, and then select the volume in the Attach volume window.\nClick Add to create a new volume, and then specify the volume name, size, and storage policy. The created volume will be automatically added to the VM disks.\n\nClick Done to finish editing VM disks and save your changes.\n\nTo detach a volume from a virtual machine\n\nOn the Virtual machines screen, click the required virtual machine.\nOn the Overview tab, click the pencil icon in the Disks field.\n\nIn the Volumes window:\n\nClick Detach to detach a volume from a stopped virtual machine.\n\nClick Force detach to detach a volume from a running virtual machine.\n\nThere is a risk of data loss.\n\nClick Done to finish editing VM disks and save your changes.",
        "paragraphs": [],
        "cli_examples": [],
        "panel_examples": [],
        "url": "https://docs.virtuozzo.com/virtuozzo_hybrid_infrastructure_6_0_self_service_guide/configuring-vm-volumes.html"
    },
    {
        "title": "Attaching ISO images to virtual machines",
        "content": "Attaching ISO images to virtual machines\nYou can attach ISO images to running or stopped virtual machines, for example, to install additional software inside them or to restore their operating system in the rescue mode. To attach an ISO image, you need to convert it to a volume, and then attach this volume to a VM.\nWhen you finish installing software from an ISO volume, you can detach it without stopping the VM first.\nTo create a volume from an ISO image\n\nOn the Images screen, click the required ISO image.\nOn the image right pane, click Create volume.\nIn the Create volume from image window, specify a name for the volume, and then click Create.\n\nTo attach an ISO volume to a virtual machine\n\nOn the Virtual machines screen, click the required VM.\nOn the Overview tab, click the pencil icon in the Volumes field.\nIn the Volumes window, click Attach.\nIn the Attach volume window, select the created volume, and then click Attach. The attached volume will be marked as ISO.\nIn the Volumes window, click Done to save your changes.\n\nThe attached volume will appear inside the VM operating system.\n\nTo detach an ISO volume from a virtual machine\n\nOn the Virtual machines screen, click the required VM.\nOn the Overview tab, click the pencil icon in the Volumes field.\nIn the Volumes window, click the ellipsis icon next to the ISO volume, and then click Force detach.\nClick Done to save your changes.",
        "paragraphs": [],
        "cli_examples": [],
        "panel_examples": [],
        "url": "https://docs.virtuozzo.com/virtuozzo_hybrid_infrastructure_6_0_self_service_guide/attaching-iso-images-to-vms.html"
    },
    {
        "title": "Creating and deleting volumes",
        "content": "Creating and deleting volumes\nLimitations\n\nA volume is removed along with all of its snapshots.\n\nTo create a volume\n\nOn the Volumes screen, click Create volume.\n\nIn the Create volume window, specify a volume name and size in gigabytes, select a storage policy, and then click Create.\n\nTo remove a volume\n\nOn the Volumes tab, check the status of the volume you want to remove.\n If the status is \"In use\", click the volume, and then click Force detach.\nIf the status is \"Available\", click the volume, and then click Delete. ",
        "paragraphs": [],
        "cli_examples": [],
        "panel_examples": [],
        "url": "https://docs.virtuozzo.com/virtuozzo_hybrid_infrastructure_6_0_self_service_guide/creating-and-deleting-volumes.html"
    },
    {
        "title": "Attaching and detaching volumes",
        "content": "Attaching and detaching volumes\nLimitations\n\nYou can only attach and detach non-boot volumes.\n\nPrerequisites\n\nA volume is created, as described in Creating and deleting volumes.\nTo be able to use volumes attached to VMs, they must be initialized inside the guest OS by standard means.\n\nTo attach a volume to a virtual machine\n\nOn the  Volumes screen, click an unused volume. \nOn the volume right pane, click Attach.\n\nIn the Attach volume window, select the VM from the drop-down list, and then click Done.\n\nTo detach a volume from a virtual machine\n\nOn the  Volumes screen, click a volume that is in use.\nIf the VM is stopped, click Detach on the volume right pane.\n\nIf the VM is running, click Force detach on the volume right pane.\n\nThere is a risk of data loss.",
        "paragraphs": [],
        "cli_examples": [],
        "panel_examples": [],
        "url": "https://docs.virtuozzo.com/virtuozzo_hybrid_infrastructure_6_0_self_service_guide/attaching-and-detaching-volumes.html"
    },
    {
        "title": "Changing the storage policy for volumes",
        "content": "Changing the storage policy for volumes\nYou can manage compute volume redundancy and performance by changing the storage policy applied to the volume. The storage policy can be changed for volumes attached to both running and stopped virtual machines.\nLimitations\n\nOnly storage policies enabled by project quotas will be available for selection.\n\nPrerequisites\n\nA volume is created, as described in Creating and deleting volumes.\n\nTo change the storage policy of a volume\n\nOn the Volumes screen, click a volume.\nClick the pencil icon in the Storage policy field.\nSelect a new storage policy, and then click the tick icon. You can choose only between storage policies with the same redundancy type.",
        "paragraphs": [],
        "cli_examples": [],
        "panel_examples": [],
        "url": "https://docs.virtuozzo.com/virtuozzo_hybrid_infrastructure_6_0_self_service_guide/changing-volume-storage-policy.html"
    },
    {
        "title": "Assigning Kubernetes pods to specific nodes",
        "content": "Assigning Kubernetes pods to specific nodes\nBy using worker groups, you can assign a pod in Kubernetes to specific nodes. When you create a custom worker group, its nodes are added a label with the group name. If you want your pod to be scheduled on a node from a specific worker group, add the node selector section with the node label to the pod's configuration file.\nTo create a pod that will be scheduled on a specific node\nClick + Create on the Kubernetes dashboard and specify a YAML file that defines this object. For example:apiVersion: v1\r\nkind: Pod\r\nmetadata:\r\n  name: nginx\r\n  labels:\r\n    env: test\r\nspec:\r\n  containers:\r\n  - name: nginx\r\n    image: nginx\r\n    imagePullPolicy: IfNotPresent\r\n  nodeSelector:\r\n    magnum.openstack.org/nodegroup: mygroup\nThis manifest describes the pod nginx that will be assigned to a node from the node group mygroup. \nWhen the pod is created, check that the hosting node belongs to the specified worker group.",
        "paragraphs": [],
        "cli_examples": [],
        "panel_examples": [],
        "url": "https://docs.virtuozzo.com/virtuozzo_hybrid_infrastructure_6_0_self_service_guide/assigning-kubernetes-pods-to-specific-nodes.html"
    },
    {
        "title": "Cloning volumes",
        "content": "Cloning volumes\nLimitations\n\nYou can clone volumes that are not attached to VMs or attached to stopped VMs.\n\nPrerequisites\n\nA volume is created, as described in Creating and deleting volumes.\n\nTo clone a volume\n\nOn the Volumes screen, click a volume.\nOn the volume right pane, click Clone.\n\nIn the Clone volume window, specify a volume name, size, and storage policy. Click Clone.",
        "paragraphs": [],
        "cli_examples": [],
        "panel_examples": [],
        "url": "https://docs.virtuozzo.com/virtuozzo_hybrid_infrastructure_6_0_self_service_guide/cloning-volumes.html"
    },
    {
        "title": "Creating and deleting users",
        "content": "Creating and deleting users\nDomain administrators can create and delete other domain administrators and project members:\n\nA domain administrator can manage virtual objects in all projects within the assigned domain, as well as projects and users in the self-service panel.\nA project member acts as a project administrator in a specific domain in the self-service panel. A project member can be assigned to different projects and can manage virtual objects in them.\n\nPrerequisites\n\nA domain administrator must have the Image uploading and Project and quota management permissions granted, to be able to configure these permissions for other users.\n\nTo create a user\n\nSelect the domain in the drop-down list in the top right corner.\nOpen the Users screen and click Create user.\n\nIn the Create user window, specify the user name, password, and, if required, a user email address and description. The user name must be unique within a domain.\n\nA description should not contain any personally identifiable information or sensitive business data.\n\nSelect the user role:\n\nTo create a domain administrator\n\nSelect the Domain administrator role.\n\nEnable Image uploading to allow the user to upload images and configure this permission for other domain users.\n\nEnable Project and quota management to allow the user to manage projects and quotas, as well as configure this permission for other domain administrators.\n\nTo create a project administrator\n\nSelect the Project member role.\n\nEnable Image uploading to allow the user to upload images.\n\nClick Manage in the Projects section and select a project to assign the user to. Then, click Save.\n\nClick Create.\n\nTo delete a user\n\nSelect the domain in the drop-down list in the top right corner.\nOn the Users screen, click the ellipsis icon next to the user, and then click Delete.\nClick Delete in the confirmation window.",
        "paragraphs": [],
        "cli_examples": [],
        "panel_examples": [],
        "url": "https://docs.virtuozzo.com/virtuozzo_hybrid_infrastructure_6_0_self_service_guide/creating-and-deleting-users.html"
    },
    {
        "title": "Assigning users to projects",
        "content": "Assigning users to projects\nDomain administrators can manage project members\u00e2\u0080\u0099 assignment on the Projects and Users screens.\nTo assign a user to a project\n\nOn the Projects screen:\n\nClick the project to which you want to assign users (not the project name).\nOn the project panel, click Manage users.\nIn the Manage users window, select one or multiple users to assign to the project. Only user accounts with the Project member role are displayed. Then, click Save.\n\nOn the Users screen:\n\nClick the user account with the Project member role that you want to assign to the project.\nOn the user panel, click Manage projects.\nIn the Manage projects window, select one or multiple projects, and then click Save.\n\nTo unassign a user from a project\n\nOn the Projects screen:\n\nClick the project to unassign users from.\nOn the project panel, open the Users tab.\nClick the bin icon next to a user you want to remove from the project.\n\nOn the Users screen:\n\nClick the user to unassign from the project.\nOn the user panel, open the Projects tab.\nClick the bin icon next to the project that you want to remove the user from.",
        "paragraphs": [],
        "cli_examples": [],
        "panel_examples": [],
        "url": "https://docs.virtuozzo.com/virtuozzo_hybrid_infrastructure_6_0_self_service_guide/assigning-users-to-projects.html"
    },
    {
        "title": "About this guide",
        "content": "About this guide\nThis guide is intended for domain administrators and project members and explains how to manage project users and compute resources using the self-service panel.",
        "paragraphs": [],
        "cli_examples": [],
        "panel_examples": [],
        "url": "https://docs.virtuozzo.com/virtuozzo_hybrid_infrastructure_6_0_self_service_guide/about-this-guide.html"
    },
    {
        "title": "Creating and deleting projects",
        "content": "Creating and deleting projects\nLimitations\n\nA project cannot be deleted if it has virtual objects.\n\nPrerequisites\n\nA domain administrator must have the Project and quota management permission granted, to be able to create projects.\n\nTo create a project\n\nSelect the domain in the drop-down list in the top right corner.\nOpen the Projects screen and click Create project.\n\nIn the Create project window, specify the project name and, optionally, description. The project name must be unique within a domain.\n\nA description should not contain any personally identifiable information or sensitive business data.\n\nClear the Enabled check box to disable the created project.\n\nDefine quotas for virtual resources that will be available inside the project. To specify a certain value for a resource, clear the Unlimited check box next to it first.\n\nClick Create.\n\nTo delete a project\n\nSelect the domain in the drop-down list in the top right corner.\nOn the Projects screen, click the ellipsis icon next to the project, and then click Delete.\nIn the confirmation window, click Delete.",
        "paragraphs": [],
        "cli_examples": [],
        "panel_examples": [],
        "url": "https://docs.virtuozzo.com/virtuozzo_hybrid_infrastructure_6_0_self_service_guide/creating-and-deleting-projects.html"
    },
    {
        "title": "Creating and deleting Kubernetes clusters",
        "content": "Creating and deleting Kubernetes clusters\nLimitations\n\nOnly users that have access to the corresponding project can perform operations with Kubernetes clusters.\nTo create two or more Kubernetes clusters in one private network, you need to split the network into subnets by using the flannel_network_cidr label.\nIn Kubernetes version 1.21.x and earlier, autoscaling to zero nodes is not supported.\n\nPrerequisites\n\nThe Kubernetes-as-a-service component is installed by a system administrator. It can be deployed along with the compute cluster or later.\nYou have a network that will interconnect the Kubernetes master and worker nodes. It can be either a shared physical network or a virtual network linked to a physical one via a virtual router. The virtual network needs to have a gateway and a DNS server specified.\nAn SSH key is added. It will be installed on both the master and worker nodes.\nYou have enough resources for all of the Kubernetes nodes, taking their flavors into account.\n\nIt is also required that the network where you create a Kubernetes cluster does not overlap with these default networks:\n\n10.100.0.0/24\u00e2\u0080\u0094Used for pod-level networking\n10.254.0.0/16\u00e2\u0080\u0094Used for allocating Kubernetes cluster IP addresses\n\nTo create a Kubernetes cluster\n\nGo to the Kubernetes clusters screen, and then click Create on the right. A window will open where you can set your cluster parameters\nEnter the cluster name, and then select a Kubernetes version and an SSH key.\n\nIn the Network section, select a network that will interconnect the Kubernetes nodes in the cluster. If you select a virtual network, decide whether you need access to your Kubernetes cluster via a floating IP address:\n\nIf you select None, you will not have access to the Kubernetes API.\nIf you select For Kubernetes API, a floating IP address will be assigned to the master node or to the load balancer if the master node is highly available.\nIf you select For Kubernetes API and nodes, floating IP addresses will be additionally assigned to all of the Kubernetes nodes (masters and workers).\n\nThen, choose whether or not to enable High availability for the master node. If you enable high availability, three master node instances will be created. They will work in the Active/Active mode.\n\nIn the Master node section, select a flavor for the master node. For production clusters, it is strongly recommended to use a flavor with at least 2 vCPUs and 8 GiB of RAM.\n\nOptionally, enable Integrated monitoring to automatically deploy the cluster-wide monitoring solution, which includes the following components: Prometheus, Alertmanager, and Grafana.\n\nThis feature is experimental and not intended for use in production environments.\n\nIn the Container volume section, select a storage policy, and then enter the size for volumes on both master and worker nodes.\n\nIn the Default worker group section,  select a flavor for each worker, and then decide whether you want to allow automatic scaling of the worker group:\n\nWith Autoscaling enabled, the number of workers will be automatically increased if there are pods stuck in the pending state due to insufficient resources, and reduced if there are workers with no pods running on them. For scaling of the worker group, set its minimum and maximum size.\n\nSome types of pods can prevent the autoscaler from removing a worker. To see a list of such pod types, refer to the official Kubernetes Autoscaler documentation.\n\nWith Autoscaling disabled, the number of worker nodes that you set will be permanent.\n\nIn the Labels section, enter labels that will be used to specify supplementary parameters for this Kubernetes cluster in the key=value format. For example: selinux_mode=permissive. Currently, only the selinux and flannel_network_cidr labels are supported. You can use other labels at your own risk. To see the full list of supported labels, refer to the OpenStack documentation.\n\nClick Create.\n\nCreation of the Kubernetes cluster will start. The master and worker nodes will appear on the Virtual machines screen, while their volumes will show up on the Volumes screen.\nAfter the cluster is ready, click Kubernetes access for instructions on how you can access the dashboard. You can also access the Kubernetes master and worker nodes via SSH, by using the assigned SSH key and the user name core.\nTo delete a Kubernetes cluster\nClick the required Kubernetes cluster on the Kubernetes clusters screen and click Delete. The master and worker VMs will be deleted along with their volumes.",
        "paragraphs": [],
        "cli_examples": [],
        "panel_examples": [],
        "url": "https://docs.virtuozzo.com/virtuozzo_hybrid_infrastructure_6_0_self_service_guide/creating-and-deleting-kubernetes-clusters.html"
    },
    {
        "title": "Configuring network interfaces of virtual machines",
        "content": "Configuring network interfaces of virtual machines\nYou can add new network interfaces to your virtual machines, edit IP addresses and security groups for the existing interfaces, and remove network interfaces by detaching them.\nLimitations\n\nYou cannot manage network interfaces of shelved VMs.\nA VM that is connected to a dual-stack network always receives an IPv6 address, if the IPv6 subnet is in the SLAAC or DHCPv6 stateless mode.\n\nTo attach a network interface to a virtual machine\n\nOn the Virtual machines screen, click the required virtual machine.\nOn the Overview tab, click Edit in the Network interfaces section.\nIn the Network interfaces window, click Add to attach a network interface.\n\nIn the Add network interface window, select a compute network to connect to, and then specify MAC address, IPv4 and/or IPv6 addresses, and security groups. By default, MAC and primary IP addresses are assigned automatically. To specify them manually, clear the Assign automatically check boxes, and enter the desired addresses. Optionally, assign additional IP addresses to the network interface in the Secondary IP addresses section. Note that a secondary IPv6 address is not available for an IPv6 subnet that works in the SLAAC or DHCPv6 stateless mode.\n\nSecondary IP addresses, unlike the primary one, will not be automatically assigned to the network interface inside the virtual machine guest OS. You should assign them manually.\n\nIf you selected a virtual network with enabled IP address management\n\nIn this case, spoofing protection is enabled and the default security group is selected by default. This security group allows all incoming and outgoing traffic on all the VM ports. If required, you can select another security group or multiple security groups.\nTo disable spoofing protection, clear all of the check boxes and turn off the toggle switch. Security groups cannot be configured with disabled spoofing protection.\n\nIf you selected a virtual network with disabled IP address management\nIn this case, spoofing protection is disabled by default and cannot be enabled. Security groups cannot be configured for such a network.\n\nIf you selected a shared physical network\n\nIn this case, spoofing protection cannot be configured by a self-service user. If you want to enable or disable spoofing protection, contact your system administrator.\r\n                        \n\nAfter specifying the network interface parameters, click Add.\n\nClick Done to finish editing VM network interfaces and save your changes.\n\nTo edit a network interface of a virtual machine\n\nOn the Virtual machines screen, click the required virtual machine.\nOn the Overview tab, click Edit in the Network interfaces section.\nIn the Network interfaces window, click the ellipsis button next to the interface you want to edit, and then click Edit.\n\nIn the Edit network interface window, modify the network interface parameters as follows:\n\nChange the primary IP address. To update the address inside the VM guest OS, restart the network interface.\nAdd or remove secondary IP addresses.\nModify security groups assigned to the VM.\n\nAfter updating the required parameters, click Save.\n\nClick Done to finish editing VM network interfaces and save your changes.\n\nTo detach a network interface from a virtual machine\n\nOn the Virtual machines screen, click the required virtual machine.\nOn the Overview tab, click Edit in the Network interfaces section.\nIn the Network interfaces window, click the ellipsis button next to the interface you want to detach, and then click Remove.\nClick Done to finish editing VM network interfaces and save your changes.",
        "paragraphs": [],
        "cli_examples": [],
        "panel_examples": [],
        "url": "https://docs.virtuozzo.com/virtuozzo_hybrid_infrastructure_6_0_self_service_guide/configuring-vm-network-interfaces.html"
    },
    {
        "title": "Changing security group assignment",
        "content": "Changing security group assignment\nWhen you create a VM, you select security groups for the VM\u00a0network interfaces. You can also change assigned security groups later.\nLimitations\n\nYou cannot configure security groups if spoofing protection is disabled or IP address management is disabled for the selected network.\n\nTo view virtual machines assigned to a security group\n\nOn the Security groups screen, click the required security group.\nOn the group right pane, navigate to the Assigned VMs tab. All the assigned virtual machines will be shown along with their status.\n\nYou can click the VM name to go to the VM Overview pane and change the security group assignment for its network interfaces.\nTo assign a security group to a virtual machine\n\nOn the Virtual machines screen, click the required virtual machine.\nOn the Overview tab, click the pencil icon in the Networks section. \nClick the ellipsis icon next to the network interface to assign a security group to, and then click Edit.\nIn the Edit network interface window, go to the Security groups tab.\nSelect one or more security groups from the drop-down list, and then click Save.\n\nThe rules from chosen security groups will be applied at runtime.",
        "paragraphs": [],
        "cli_examples": [],
        "panel_examples": [],
        "url": "https://docs.virtuozzo.com/virtuozzo_hybrid_infrastructure_6_0_self_service_guide/changing-security-group-assignment.html"
    },
    {
        "title": "Creating images from volumes",
        "content": "Creating images from volumes\nTo create multiple VMs with the same boot volume, you can create a template from an existing boot volume and deploy VMs from it. \nPrerequisites\n\nLinux virtual machines have cloud-Init installed, as described in Preparing Linux templates.\nWindows virtual machines have Cloudbase-Init and OpenSSH Server installed, as described in Preparing Windows templates.\n\nLogging is enabled inside a virtual machine, as instructed in Enabling logging for virtual machines.\n\nTo create a template from a boot volume\n\nPower off the VM that the original volume is attached to.\nSwitch to the Volumes screen, click volume\u00e2\u0080\u0099s ellipsis button and select Create image.\n\nIn the Create image window, enter an image name, and then click Create.\n\nThe new image will appear on the Images screen.",
        "paragraphs": [],
        "cli_examples": [],
        "panel_examples": [],
        "url": "https://docs.virtuozzo.com/virtuozzo_hybrid_infrastructure_6_0_self_service_guide/creating-images-from-volumes.html"
    },
    {
        "title": "Creating external load balancers in Kubernetes",
        "content": "Creating external load balancers in Kubernetes\nIn Kubernetes, you can create a service with an external load balancer that provides access to it from public networks. The load balancer will receive a publicly accessible IP address and route incoming requests to the correct port on the Kubernetes cluster nodes.\nPrerequisites\n\nTo be able to assign a specific floating IP address to an external load balancer during its deployment, this floating IP address must be created in advance, as described in Managing floating IP addresses.\n\nTo create a service with an external load balancer\n\n\r\n                    Access the Kubernetes cluster via the dashboard. Click Kubernetes access for instructions.\r\n                \n\nOn the Kubernetes dashboard, create a deployment and service of the LoadBalancer type. To do it, click + Create and specify a YAML file that defines these objects. For example:\n\nIf you have deployed the Kubernetes cluster in a shared physical network, specify the following manifest:apiVersion: apps/v1\r\nkind: Deployment\r\nmetadata:\r\n  name: nginx\r\nspec:\r\n  replicas: 2\r\n  selector:\r\n    matchLabels:\r\n      app: nginx\r\n  template:\r\n    metadata:\r\n      labels:\r\n        app: nginx\r\n    spec:\r\n      containers:\r\n      - name: nginx\r\n        image: nginx\r\n        ports:\r\n        - containerPort: 80\r\n---\r\nkind: Service\r\napiVersion: v1\r\nmetadata:\r\n  name: load-balancer\r\n  annotations:\r\n    service.beta.kubernetes.io/openstack-internal-load-balancer: \"true\"\r\nspec:\r\n  selector:\r\n    app: nginx\r\n  type: LoadBalancer\r\n  ports:\r\n  - port: 80\r\n    targetPort: 80\r\n    protocol: TCP\r\n\nThe manifest above describes the deployment nginx with a replica set of two pods and the service load-balancer with the LoadBalancer type. The annotation used for the service indicates that the load balancer will be internal.\nOnce the load balancer is created, it will be allocated an IP address from the shared physical network and can be accessed at this external endpoint.\n\n\r\n                            If you have deployed the Kubernetes cluster in a virtual network linked to a physical one via a virtual router, you can use the YAML file above without the annotations section for the load-balancer service. The created load balancer will receive a floating IP address from the physical network and can be accessed at this external endpoint. To use a specific floating IP address, create it in the self-service panel in advance, and then specify it with the loadBalancerIP parameter:<...>\r\n---\r\nkind: Service\r\napiVersion: v1\r\nmetadata:\r\n  name: load-balancer\r\nspec:\r\n  selector:\r\n    app: nginx\r\n  type: LoadBalancer\r\n  loadBalancerIP: 10.10.10.100\r\n  ports:\r\n  - port: 80\r\n    targetPort: 80\r\n    protocol: TCP\r\n\n\nIf you want to choose whether to create highly available load balancers for your service or not, you can make use of load balancer flavors. To specify a flavor for a load balancer add loadbalancer.openstack.org/flavor-id: <flavor-id> to the annotations section. The flavor ID can be obtained from your system administrator.\n\nThe load balancer will also appear in the self-service panel, where you can monitor its performance and health. For example:",
        "paragraphs": [],
        "cli_examples": [],
        "panel_examples": [],
        "url": "https://docs.virtuozzo.com/virtuozzo_hybrid_infrastructure_6_0_self_service_guide/creating-external-load-balancers-in-kubernetes.html"
    },
    {
        "title": "Creating load balancers",
        "content": "Creating load balancers\nLimitations\n\nThe forwarding rule and protocol cannot be changed after the load balancer pool is added.\n\nIf an IPv6 subnet where a load balancer will operate works in the SLAAC or DHCPv6 stateless mode, the load balancer will receive an IPv6 address automatically.\n\nPrerequisites\n\nA network where a load balancer will operate has IP management enabled.\nAll VMs that will be added in balancing pools have fixed IP addresses.\n\nTo create a load balancer with balancing pools\n\n\r\n                On the Load balancers screen, click Create load balancer.\r\n            \n\nIn the Create load balancer window, do the following:\n\nSpecify a name and, optionally, description.\n\nA description should not contain any personally identifiable information or sensitive business data.\n\nEnable or disable high availability:With high availability enabled, two load balancer instances will be created. They will work in the Active/Standby mode according to the Virtual Router Redundancy Protocol (VRRP).With high availability disabled, a single load balancer instance will be created.\n\nIn the Network settings section, select the network that the load balancer will operate in and, optionally, specify an IP address that will be allocated to the load balancer.\n\nIf you selected a virtual network that is connected to a physical network via a router\n\nIn this case, you can assign a floating IP address to the load balancer. To do it, select Use a floating IP address, and then choose either to use an available floating IP address or to create a new one.\n\nIf you selected a shared physical network with both IPv4 and IPv6 subnets\n\nIn this case, you need to choose the IP version that will be used for the load balancer.\n\nIn the Balancing pools section, create a balancing pool to forward traffic from the load balancer to virtual machines by clicking Add.\nIn the Create balancing pool window that opens, do the following:\n\nIn the Forwarding rule section, select a forwarding rule from the load balancer to the backend protocol, and then specify the ports for incoming and destination connections.\nNote the following:\n\nWith the HTTPS -> HTTPS rule, all virtual machines need to have the same SSL certificate (or a certificate chain).\nWith the HTTPS -> HTTP rule, you need to upload an SSL certificate (or a certificate chain) in the PEM format and a private key in the PEM format.\n\nIn the Balancing settings section, select the balancing algorithm:\n\nLeast connections. Requests will be forwarded to the VM with the least number of active connections.\nRound robin. All VMs will receive requests in the round-robin manner.\nSource IP. Requests from a unique source IP address will be directed to the same VM.\n\nEnable/disable the Sticky session option to enable/disable session persistence. The load balancer will generate a cookie that will be inserted into each response. The cookie will be used to send future requests to the same VM.\n\nThis option is not available in the SSL passthrough mode.\n\nIn the Members section, add members, that is, virtual machines, to the balancing pool by clicking Add. Each VM can be included to multiple balancing pools.\nIn the Add members window that opens, select the desired VMs, and then click Add.\n\nYou can select only between VMs that are connected to the chosen network.\n\nIn the Health monitor section, select the protocol that will be used for monitoring members availability:\n\nHTTP/HTTPS. The HTTP/HTTPS method GET will be used to check for the response status code 200. Additionally, specify the URL path to the health monitor.\nTCP/UDP. The health monitor will check the TCP/UDP connection on the backend port.\nPING. The health monitor will check members\u00e2\u0080\u0099 IP addresses.\n\nBy default, the health monitor removes a member from a balancing pool if it fails three consecutive health checks of five-second intervals. When a member returns to operation and responds successfully to three consecutive health checks, it is added to the pool again. You can manually set the health monitor parameters, such as the interval after which VM health is checked, the time after which the monitor times out, healthy and unhealthy thresholds. To change the default parameters, click Edit parameters, enter the desired values, and then click Save.\n\n\r\n                                Click Create.\r\n                     \n\n\r\n                        Add more balancing pools, as described above.\r\n                    \n\nClick Create.",
        "paragraphs": [],
        "cli_examples": [],
        "panel_examples": [],
        "url": "https://docs.virtuozzo.com/virtuozzo_hybrid_infrastructure_6_0_self_service_guide/creating-load-balancers.html"
    },
    {
        "title": "Dynamically provisioning persistent volumes",
        "content": "Dynamically provisioning persistent volumes\nPersistent volumes can be dynamically provisioned via persistent volume claims (PVC). A PVC requests for a PV of a specific storage class, access mode, and size. If a suitable PV exists in the cluster, it is bound to the claim. If suitable PVs do not exist but can be provisioned, a new volume is created and bound to the claim. Kubernetes uses a PVC to obtain the PV backing it and mounts it to the pod.\nPrerequisites\n\nA pod and the persistent volume claim it uses must exist in the same namespace.\n\nTo dynamically provision a PV to a pod\n\nAccess the Kubernetes cluster via the dashboard. Click Kubernetes access for instructions.\r\n            \n\r\n                On the Kubernetes dashboard, create a storage class, as described in Creating storage classes.\r\n            \n\nCreate a persistent volume claim. To do it, click + Create and specify the following YAML file:apiVersion: v1\r\nkind: PersistentVolumeClaim\r\nmetadata:\r\n  name: mypvc\r\nspec:\r\n  accessModes:\r\n  - ReadWriteOnce\r\n  resources:\r\n    requests:\r\n      storage: 10Gi\r\n  storageClassName: default\nThis manifest specifies the persistent volume claim mypvc that requests from the storage class default a volume of at least 10 GiB that can be mounted in the read/write mode by a single node.\nCreation of the PVC triggers dynamic provisioning of a persistent volume that satisfies the claim\u00e2\u0080\u0099s requirements. Kubernetes then binds it to the claim.\n\nCreate a pod and specify the PVC as its volume. To do it, click + Create and enter the following YAML file:apiVersion: v1\r\nkind: Pod\r\nmetadata:\r\n  name: nginx\r\nspec:\r\n  containers:\r\n  - image: nginx\r\n    imagePullPolicy: IfNotPresent\r\n    name: nginx\r\n    ports:\r\n    - containerPort: 80\r\n      protocol: TCP\r\n    volumeMounts:\r\n      - mountPath: /var/lib/www/html\r\n        name: mydisk\r\n  volumes:\r\n  - name: mydisk\r\n    persistentVolumeClaim:\r\n      claimName: mypvc\r\n      readOnly: false\r\n\nThis configuration file describes the pod nginx that uses the persistent volume claim mypvc. The persistent volume bound to the claim will be accessible at /var/lib/www/html inside the nginx container.",
        "paragraphs": [],
        "cli_examples": [],
        "panel_examples": [],
        "url": "https://docs.virtuozzo.com/virtuozzo_hybrid_infrastructure_6_0_self_service_guide/dynamically-provisioning-persistent-volumes.html"
    },
    {
        "title": "Creating storage classes",
        "content": "Creating storage classes\nIn Virtuozzo Hybrid Infrastructure, storage classes map to compute storage policies defined in the admin panel. Creating a storage class is required for all storage operations in a Kubernetes cluster.\nTo create a storage class\n\u00d0\u00a1lick + Create on the Kubernetes dashboard and specify a YAML file that defines this object. For example:apiVersion: storage.k8s.io/v1\r\nkind: StorageClass\r\nmetadata:\r\n  name: default\r\n  annotations:\r\n    storageclass.kubernetes.io/is-default-class: \"true\"\r\nprovisioner: cinder.csi.openstack.org\r\nparameters:\r\n  type: default\nThis manifest describes the storage class default with the storage policy default. It also marks this storage policy as default for the Kubernetes cluster. The storage policy must exist in the compute cluster and be specified in the storage quotas to the current project.",
        "paragraphs": [],
        "cli_examples": [],
        "panel_examples": [],
        "url": "https://docs.virtuozzo.com/virtuozzo_hybrid_infrastructure_6_0_self_service_guide/creating-storage-classes.html"
    },
    {
        "title": "Creating VPN connections",
        "content": "Creating VPN connections\nPrerequisites\n\nYou have a virtual router created, as described in Managing virtual routers.\nThe virtual router connects the physical network with virtual networks that you want to be exposed.\nNetworks that will be connected via a VPN tunnel must have non-overlapping IP ranges.\n\n[For Virtuozzo Hybrid Infrastructure 5.4 Update 1 and earlier versions] If a virtual machine has a floating IP address assigned to its private network interface, configure static routes of a virtual router, for the VM traffic to be routed through a VPN tunnel.\n\nIn this case, you need to add static routes to your virtual router for remote subnets that you want to access via a VPN tunnel. The next hop IP address will be the IP address of the internal SNAT router interface. To find out this IP address, run:\n# openstack --insecure port list --device-id <router_id> --device-owner network:router_centralized_snat -c fixed_ips\r\n\t\t\t\t\t\t\t\t+-------------------------------------------------------------------------------+\r\n\t\t\t\t\t\t\t\t| Fixed IP Addresses                                                            |\r\n\t\t\t\t\t\t\t\t+-------------------------------------------------------------------------------+\r\n\t\t\t\t\t\t\t\t| ip_address='192.168.128.69', subnet_id='c33e75f3-8ede-4899-a6cb-6f9d87a61714' |\r\n\t\t\t\t\t\t\t+-------------------------------------------------------------------------------+\n\nIn this example, 192.168.128.69 is the IP address of the internal SNAT router interface. A router, however, may have multiple internal SNAT router interfaces. You can specify any of them as the next hop IP address. For more details on adding static routes, refer to Managing static routes.\n\nTo create a VPN connection\n\nOn the VPN screen, click Create VPN.\n\nOn the Configure IKE step, specify parameters for the IKE policy that will be used to establish a VPN connection. You can choose to use an existing IKE policy or create a new one. For the new IKE policy, do the following:\n\nSpecify a custom name for the IKE policy.\nSpecify the key lifetime, in seconds, that will define the rekeying interval. The IKE key lifetime must be greater than that of the IPsec key.\nSelect the authentication algorithm that will be used to verify the data integrity and authenticity.\nSelect the encryption algorithm that will be used to ensure that data is not viewable while in transit.\nSelect the IKE version 1 or 2. Version 1 has limitations, for example, it does not support multiple subnets.\nSelect the Diffie-Hellman (DH) group that will be used to build the encryption key for the key exchange process. Higher group numbers are more secure but require additional time for the key to compute.\nClick Next.\n\nOn the Configure IPsec step, specify parameters for the IPsec policy that will be used to encrypt the VPN traffic. You can choose to use an existing IPsec policy or create a new one. For the new IPsec policy, do the following:\n\nSpecify a custom name for the IPsec policy.\nSpecify the key lifetime, in seconds, that will define the rekeying interval. The IPsec key lifetime must not be greater than that of the IKE key.\nSelect the authentication algorithm that will be used to verify the data integrity and authenticity.\nSelect the encryption algorithm that will be used to ensure that data is not viewable while in transit.\nSelect the Diffie-Hellman (DH) group that will be used to build the encryption key for the key exchange process. Higher group numbers are more secure but require additional time for the key to compute.\nClick Next.\n\nOn the Create endpoint groups step, select a virtual router and specify local and remote subnets that will be connected by the VPN tunnel. You can choose to use existing local and remote endpoints, or create new ones. For the new endpoints, do the following:\n\nSpecify a custom name for the local endpoint, and then select local subnets.\nSpecify a custom name for the remote endpoint, and then add remote subnets in the CIDR format.\nClick Next.\n\nOn the Configure VPN step, specify parameters to establish the VPN connection with a remote gateway:\n\nSpecify a custom name for the VPN connection.\nSpecify the public IPv4 address of the remote gateway, that is, peer IP address.\nGenerate the pre-shared key that will be used for the peer authentication.\n\nIf necessary, you can also configure additional settings by selecting Advanced settings and specifying the following parameters:\n\nThe peer ID for authentication and the mode for establishing a connection.\nThe Dead Peer Detection (DPD) policy, interval, and timeout, in seconds.\n\nClick Next.\n\nOn the Summary step, review the configuration, and then click Create.\n\nWhen the VPN connection is created, its status will change from \"Pending creation\" to \"Down\". The connection will become active once the VPN tunnel is configured by the other VPN party and the IKE authorization is successful.\n\nThe IKE and IPsec configuration must match for both communicating parties. Otherwise, the VPN connection between them will not be established.",
        "paragraphs": [],
        "cli_examples": [],
        "panel_examples": [],
        "url": "https://docs.virtuozzo.com/virtuozzo_hybrid_infrastructure_6_0_self_service_guide/creating-vpn-connections.html"
    },
    {
        "title": "Creating volumes from images",
        "content": "Creating volumes from images\nYou can create volumes from both ISO images and templates. \nTo make a  volume from an image\n\nGo to the Images screen, and then click the required image.\nOn the image panel, click Create volume.\n\nIn the Create volume window, specify the volume name, size, and select a storage policy.\n\nClick Create.\n\nThe new volume will appear on the Volumes screen.",
        "paragraphs": [],
        "cli_examples": [],
        "panel_examples": [],
        "url": "https://docs.virtuozzo.com/virtuozzo_hybrid_infrastructure_6_0_self_service_guide/creating-volumes-from-images.html"
    },
    {
        "title": "Installing guest tools",
        "content": "Installing guest tools\n\nCreate a compute volume from the vz-guest-tools-win or vz-guest-tools-lin image, depending on the VM operating system:\nIf you do not have these images in your project, obtain them from the official repository and upload them to your project, as described in Uploading images.\n\nOn the Images screen, click the vz-guest-tools-win or vz-guest-tools-lin image.\nOn the image right pane, click Create volume.\nIn the Create volume from image window, specify a name for the volume, and then click Create.\n\nAttach the volume with the guest tools to the virtual machine:\n\nOn the Virtual machines screen, click the required VM.\nOn the VM right pane, click the pencil icon in the Volumes field.\nIn the Volumes window, click Attach.\nIn the Attach volume window, select the created volume with the guest tools, and then click Attach. The attached volume will be marked as ISO.\nIn the Volumes window, click Done, to save your changes.\n\nLog in to the virtual machine.\n\nInside the VM, do the following:\n\nInside a Windows VM, go to the mounted optical drive in Explorer and install the guest tools by running setup.exe. After the installation is complete, restart the VM.\n\nInside a Linux VM, create a mount point for the optical drive with the guest tools image and run the installer:# mkdir /mnt/cdrom\r\n# mount <path_to_guest_tools_iso> /mnt/cdrom\r\n# bash /mnt/cdrom/install\t\t\t\t\t\t\t\t",
        "paragraphs": [],
        "cli_examples": [],
        "panel_examples": [],
        "url": "https://docs.virtuozzo.com/virtuozzo_hybrid_infrastructure_6_0_self_service_guide/installing-guest-tools.html"
    },
    {
        "title": "Editing user credentials and permissions",
        "content": "Editing user credentials and permissions\nIf required, self-service users can change the password of their account. Additionally, domain administrators are able to edit credentials and permissions of other domain administrators and project members.\nPrerequisites\n\nA domain administrator must have the Image uploading and Project and quota management permissions granted, to be able to configure these permissions for other users.\n\nTo change the password\n\nIn the top right corner of the self-service panel, click the user icon, and then click Change password.\nIn the Change password window, enter the current password and enter a new password twice.\nClick Save.\n\nTo edit a user\n\nSelect the domain in the drop-down list in the top right corner.\nOn the Users screen, click the ellipsis icon next to the user, and then click Edit.\nMake the required changes, and then click Save.",
        "paragraphs": [],
        "cli_examples": [],
        "panel_examples": [],
        "url": "https://docs.virtuozzo.com/virtuozzo_hybrid_infrastructure_6_0_self_service_guide/editing-user-credentials-and-permissions.html"
    },
    {
        "title": "Creating virtual machines",
        "content": "Creating virtual machines\nLimitations\n\nUEFI boot is not supported for CentOS 7.x virtual machines with less than 1 GiB of RAM.\n\nPrerequisites\n\nYou have a guest OS source prepared, as described in Managing images.\nOne or more compute networks are created by using the instructions in Managing virtual networks.\n\nCustom security groups are configured, as instructed in Managing security groups.\n\nAn SSH key is added, as outlined in Managing SSH keys. You can specify an SSH key only when creating VMs from a template or boot volume.\n\nTo create a virtual machine\n\nOn the Virtual machines screen, click Create virtual machine. A window will open where you will need to specify the VM parameters.\n\nSpecify a name for the new VM.\n\nSelect the VM boot media:\n\nIf you have an ISO image or a template\n\nSelect Image in the Deploy from section, and then click Specify in the Image section.\n\nIn the Images window, select the ISO image or template, and then click Done.\n\nIf you have a compute boot volume\n\nSelect Volume in the Deploy from section, and then click Specify in the Volumes section.\nIn the Volumes window, click Attach.\n\nIn the Attach volume window, find and select the volume, and then click Attach.\n\nIf you attach more than one volume, the first attached volume becomes the boot volume, by default. To select another volume as bootable, place it first in the list by clicking the up arrow button next to it.\n\nIf you select an image or volume with an assigned placement, the created VM will also inherit this placement.\n\nAfter selecting the boot media, volumes required for this media to boot will be automatically added to the Volumes section.\n\nConfigure the VM disks:\n\nIn the Volumes window, make sure the default boot volume is large enough to accommodate the guest OS. Otherwise, click the ellipsis icon next to it, and then Edit. Change the volume size and click Save.\n\nAdd more disks to the VM by creating or attaching volumes. To do this, click the pencil icon in the Volumes section, and then Add or Attach in the Volumes window.\n\nSelect volumes that will be removed during the VM deletion. To do this, click the pencil icon in the Volumes section, click the ellipsis icon next to the needed volume, and then Edit. Enable Delete on termination and click Save.\nWhen you finish configuring the VM disks, click Done.\n\nChoose the amount of RAM and CPU resources that will be allocated to the VM in the Flavor section. In the Flavor window, select a flavor, and then click Done.\n\nWhen choosing a flavor for a VM, ensure it satisfies the hardware requirements of the guest OS.\n\nTo select a flavor with an assigned placement, you can filter flavors by placement. The VM created from such a flavor will also inherit this placement.\n\nAdd network interfaces to the VM in the Networks section:\n\nIn the Network interfaces window, click Add to attach a network interface.\n\nIn the Add network interface window, select a compute network to connect to, and then specify MAC address, IPv4 and/or IPv6 addresses, and security groups. By default, MAC and primary IP addresses are assigned automatically. To specify them manually, clear the Assign automatically check boxes, and enter the desired addresses. Optionally, assign additional IP addresses to the network interface in the Secondary IP addresses section. Note that a secondary IPv6 address is not available for an IPv6 subnet that works in the SLAAC or DHCPv6 stateless mode.\n\nSecondary IP addresses, unlike the primary one, will not be automatically assigned to the network interface inside the virtual machine guest OS. You should assign them manually.\n\nIf you selected a virtual network with enabled IP address management\n\nIn this case, spoofing protection is enabled and the default security group is selected by default. This security group allows all incoming and outgoing traffic on all the VM ports. If required, you can select another security group or multiple security groups.\nTo disable spoofing protection, clear all of the check boxes and turn off the toggle switch. Security groups cannot be configured with disabled spoofing protection.\n\nIf you selected a virtual network with disabled IP address management\nIn this case, spoofing protection is disabled by default and cannot be enabled. Security groups cannot be configured for such a network.\n\nIf you selected a shared physical network\n\nIn this case, spoofing protection cannot be configured by a self-service user. If you want to enable or disable spoofing protection, contact your system administrator.\r\n                        \n\nAfter specifying the network interface parameters, click Add. The network interface will appear in the Network interfaces list.\n\nIf required, edit IP addresses and security groups of newly added network interfaces. To do this, click the ellipsis icon, click Edit, and then set the parameters.\n\nWhen you finish configuring the VM network interfaces, click Done.\n\nIf you have chosen to boot from a template or volume, which has cloud-init and OpenSSH installed:\n\nAs cloud images have no default password, you can access VMs deployed from them only by using the key authentication method with SSH.\n\nAdd an SSH key to the VM, to be able to access it via SSH without a password. \n\nIn the Select an SSH key window, select an SSH key  and then click Done.\n\nAdd user data to customize the VM after launch, for example, change a user password. \n\nWrite a cloud-config or shell script in the Customization script field or browse a file on your local server to load the script from.\n\nTo inject a script in a Windows VM, refer to the Cloudbase-Init documentation. For example, you can set a new password for the account using the following script:#ps1\r\nnet user <username> <new_password>\r\n\n\nEnable CPU and RAM hot plug for the VM in Advanced options, to be able to change its flavor when the VM is running. You can also enable hot plug after the VM is created.\n\nIf you do not see this option, CPU and RAM hot plug is disabled in your project. To enable it, contact your system administrator.\n\nIf you have chosen to boot from an ISO image, enable UEFI boot in Advanced options, to be able to boot the VM in the UEFI mode. This option cannot be configured after the VM is created.\n\nYou cannot configure UEFI boot if you have selected a template as the VM boot media. If your template has UEFI boot enabled, the option is automatically enabled for the VM, and vice versa.\n\nAfter configuring all of the VM parameters, click Deploy to create and boot the VM.\n\nIf you are deploying the VM from an ISO image, you need to install the guest OS inside the VM by using the built-in VNC console. For VMs with UEFI boot enabled, open the VNC console, and then press any key to boot from the chosen ISO image. Virtual machines created from a template or a boot volume already have a preinstalled guest OS.",
        "paragraphs": [],
        "cli_examples": [],
        "panel_examples": [],
        "url": "https://docs.virtuozzo.com/virtuozzo_hybrid_infrastructure_6_0_self_service_guide/creating-virtual-machines.html"
    },
    {
        "title": "Enabling and disabling users and projects",
        "content": "Enabling and disabling users and projects\nDomain administrators can allow or prohibit other users' login by enabling and disabling their accounts. They can also allow or prohibit access to projects by enabling and disabling them.\nPrerequisites\n\nA domain administrator must have the Project and quota management permission granted, to be able to enable and disable projects.\n\nTo enable or disable a user\n\nSelect the domain in the drop-down list in the top right corner.\nOn the Users screen, click the ellipsis icon next to the user, and then click Enable or Disable.\n\nTo enable or disable a project\n\nSelect the domain in the drop-down list in the top right corner.\nOn the Projects screen, click the ellipsis icon next to the project, and then click Enable or Disable.",
        "paragraphs": [],
        "cli_examples": [],
        "panel_examples": [],
        "url": "https://docs.virtuozzo.com/virtuozzo_hybrid_infrastructure_6_0_self_service_guide/enabling-disabling-users-and-projects.html"
    },
    {
        "title": "Deleting virtual machines",
        "content": "Deleting virtual machines\nLimitations\n\nA VM is removed along with its disks that have the Delete on termination option enabled during the VM deployment.\n\nPrerequisites\n\nVirtual machines are created, as described in Creating virtual machines.\n\nTo remove one virtual machine\n\nClick the ellipsis button next to a VM you want to delete, and then click Delete.\nClick Delete in the confirmation window.\n\nTo remove multiple virtual machines\n\nSelect the check boxes next to VMs you want to delete.\nOver the VM list, click Delete.\nClick Delete in the confirmation window.",
        "paragraphs": [],
        "cli_examples": [],
        "panel_examples": [],
        "url": "https://docs.virtuozzo.com/virtuozzo_hybrid_infrastructure_6_0_self_service_guide/deleting-virtual-machines.html"
    },
    {
        "title": "Editing VPN connections",
        "content": "Editing VPN connections\nAfter a VPN connection is created, you can change its endpoint groups and VPN settings at any time.\nLimitations\n\nYou cannot change the virtual router and security policies used to establish a VPN connection.\n\nPrerequisites\n\nA VPN connection is created, as described in Creating VPN connections.\n\nTo edit a VPN connection\n\nOn the VPN screen, click a VPN connection to modify.\nOn the connection right pane, click Edit.\nIn the Edit VPN window, configure local and remote endpoints, if required, and then click Next.\nOn the next step, change VPN parameters such as the VPN connection name, peer IP address, and PSK key. If necessary, you can also configure additional settings by selecting Advanced settings and editing the required parameters.\nClick Save to apply your changes.\n\nAfter you update the connection parameters, its status will change to \"Down\". The connection will re-initiate once the parameters are similarly updated by the other VPN party.\n\nThe IKE and IPsec configuration must match for both communicating parties. Otherwise, the VPN connection between them will not be established.",
        "paragraphs": [],
        "cli_examples": [],
        "panel_examples": [],
        "url": "https://docs.virtuozzo.com/virtuozzo_hybrid_infrastructure_6_0_self_service_guide/editing-vpn-connections.html"
    },
    {
        "title": "Enabling logging for virtual machines",
        "content": "Enabling logging for virtual machines\nThe console log of a virtual machine can be used for troubleshooting boot issues. The log contains messages only if logging is enabled inside the VM, otherwise the log is empty.\nThe logging can be turned on by enabling the TTY1 and TTYS0 logging levels in Linux VMs and Emergency Management Services (EMS) console redirection in Windows VMs. You may also enable driver status logging in Windows VMs, to see the list of loaded drivers. This can be useful for troubleshooting a faulty driver or long boot process.\nTo enable TTY1 and TTYS0 logging in Linux virtual machines\n\nAdd the line GRUB_CMDLINE_LINUX_DEFAULT=\"console=tty1 console=ttyS0\" to the file /etc/default/grub.\n\nDepending on the boot loader, run either# grub-mkconfig -o /boot/grub/grub.cfg\r\n\nor# grub2-mkconfig -o /boot/grub2/grub.cfg\r\n\n\nReboot the VM.\n\nTo enable EMS console redirection in Windows virtual machines\n\nStart Windows PowerShell by using administrator privileges.\n\nIn the PowerShell console, set the COM port and baud rate for EMS console redirection. As Windows VMs have only the COM1 port with the transmission rate of 9600 bps, run:bcdedit /emssettings EMSPORT:1\r\n\n\nEnable EMS for the current boot entry:bcdedit /ems on\r\n\n\nTo enable driver status logging in Windows virtual machines\n\nStart System Configuration by using administrator privileges.\nIn the System Configuration windows, open the Boot tab, and select the check boxes OS boot information and Make all boot settings permanent.\nConfirm the changes and restart the system.",
        "paragraphs": [],
        "cli_examples": [],
        "panel_examples": [],
        "url": "https://docs.virtuozzo.com/virtuozzo_hybrid_infrastructure_6_0_self_service_guide/enabling-logging-for-vms.html"
    },
    {
        "title": "Logging in to the self-service panel",
        "content": "Logging in to the self-service panel\nTo log in to the self-service panel\n\n\r\n                    Visit the panel\u00e2\u0080\u0099s IP address on port 8800.\r\n                \n\nEnter your domain name (case sensitive) as well as user name and password. Alternatively, if you are given the link to the self-service panel for a specific domain, you will only need to provide the user name and password.",
        "paragraphs": [],
        "cli_examples": [],
        "panel_examples": [],
        "url": "https://docs.virtuozzo.com/virtuozzo_hybrid_infrastructure_6_0_self_service_guide/logging-in-to-the-self-service-panel.html"
    },
    {
        "title": "Managing floating IP addresses",
        "content": "Managing floating IP addresses\nA virtual machine connected to a virtual network can be accessed from public networks, such as the Internet, by means of a floating IP address. Such an address is picked from a physical network and mapped to the VM\u00e2\u0080\u0099s private IP address. The floating and private IP addresses are used at the same time on the VM\u00e2\u0080\u0099s network interface. The private IP address is used to communicate with other VMs on the virtual network. The floating IP address is used to access the VM from public networks. The VM guest operating system is unaware of the assigned floating IP address.\nPrerequisites\n\nYou have a virtual router created, as described in Managing virtual routers.\nThe virtual machine to assign a floating IP to has a fixed private IP address.\nThe virtual router connects the physical network, from which a floating IP will be picked, with the VM\u00e2\u0080\u0099s virtual network.\n\nTo create a floating IP address and assign it to a virtual machine\n\nOn the Floating IPs screen, click Add floating IP.\n\nIn the Add floating IP address, select a physical network, from which a floating IP will be picked, and a VM network interface with a fixed private IP address.\n\nClick Add.\n\nTo re-assign a floating IP address to another virtual machine\n\nClick the ellipsis icon next to the floating IP address, and then click Unassign.\nOnce the VM name disappears in the Assigned to column, click the ellipsis icon again, and then select Assign.\nIn the Assign floating IP address window, select a VM network interface with a fixed private IP address.\nClick Assign.\n\nTo remove a floating IP address\n\nUnassign it from a virtual machine. Click the ellipsis icon next to the floating IP address, and then click Unassign.\nClick the ellipsis icon again, and then select Delete.",
        "paragraphs": [],
        "cli_examples": [],
        "panel_examples": [],
        "url": "https://docs.virtuozzo.com/virtuozzo_hybrid_infrastructure_6_0_self_service_guide/managing-floating-ip-addresses.html"
    },
    {
        "title": "Making Kubernetes deployments highly available",
        "content": "Making Kubernetes deployments highly available\nIf a node that hosts a Kubernetes pod fails or becomes unreachable over the network, the pod is stuck in a transitional state. In this case, the pod's persistent volumes are not automatically detached, and it prevents the pod redeployment on another worker node. To make your Kubernetes applications highly available, you need to enforce the pod termination in the event of node\u00a0failure by adding rules to the pod deployment. \nTo terminate a stuck pod\nAdd the following lines to the spec section of the deployment configuration file:terminationGracePeriodSeconds: 0\r\ntolerations:\r\n- effect: NoExecute\r\nkey: node.kubernetes.io/unreachable\r\noperator: Exists\r\ntolerationSeconds: 2\r\n- effect: NoExecute\r\nkey: node.kubernetes.io/not-ready\r\noperator: Exists\r\ntolerationSeconds: 2\nIf the node's state changes to \"NotReady\" or \"Unreachable\", the pod will be automatically terminated in 2 seconds.\nThe entire YAML file of a deployment may look as follows:apiVersion: apps/v1\r\nkind: Deployment\r\nmetadata:\r\n  name: nginx\r\nspec:\r\n  replicas: 1\r\n  selector:\r\n    matchLabels:\r\n      app: nginx\r\n  template:\r\n    metadata:\r\n      labels:\r\n        app: nginx\r\n    spec:\r\n      terminationGracePeriodSeconds: 0\r\n      tolerations:\r\n      - effect: NoExecute\r\n        key: node.kubernetes.io/unreachable\r\n        operator: Exists\r\n        tolerationSeconds: 2\r\n      - effect: NoExecute\r\n        key: node.kubernetes.io/not-ready\r\n        operator: Exists\r\n        tolerationSeconds: 2\r\n      containers:\r\n      - image: nginx\r\n        imagePullPolicy: IfNotPresent\r\n        name: nginx\r\n        ports:\r\n        - containerPort: 80\r\n          protocol: TCP\r\n        volumeMounts:\r\n          - mountPath: /var/lib/www/html\r\n            name: mydisk\r\n      volumes:\r\n        - name: mydisk\r\n          persistentVolumeClaim:\r\n            claimName: mypvc\nThe manifest above describes the deployment nginx with one pod that uses the persistent volume claim mypvc and will be automatically terminated in 2 seconds in the event of node\u00a0failure.",
        "paragraphs": [],
        "cli_examples": [],
        "panel_examples": [],
        "url": "https://docs.virtuozzo.com/virtuozzo_hybrid_infrastructure_6_0_self_service_guide/making-kubernetes-deployments-highly-available.html"
    },
    {
        "title": "Managing balancing pools",
        "content": "Managing balancing pools\nTo see a list of balancing pools in a load balancer, click its name.\n\nYou can open the pool right pane to monitor its performance and health on the Overview tab, see its parameters on the Properties tab, and manage its members on the Members tab.\nLimitations\n\nThe forwarding rule and protocol cannot be changed after the load balancer pool is added.\n\nPrerequisites\n\nAll VMs that will be added in balancing pools have fixed IP addresses.\n\nTo add another balancing pool to a load balancer\n\nClick the load balancer name, and then clikc Create balancing pool.\n\nIn the Forwarding rule section, select a forwarding rule from the load balancer to the backend protocol, and then specify the ports for incoming and destination connections.\nNote the following:\n\nWith the HTTPS -> HTTPS rule, all virtual machines need to have the same SSL certificate (or a certificate chain).\nWith the HTTPS -> HTTP rule, you need to upload an SSL certificate (or a certificate chain) in the PEM format and a private key in the PEM format.\n\nIn the Balancing settings section, select the balancing algorithm:\n\nLeast connections. Requests will be forwarded to the VM with the least number of active connections.\nRound robin. All VMs will receive requests in the round-robin manner.\nSource IP. Requests from a unique source IP address will be directed to the same VM.\n\nEnable/disable the Sticky session option to enable/disable session persistence. The load balancer will generate a cookie that will be inserted into each response. The cookie will be used to send future requests to the same VM.\n\nThis option is not available in the SSL passthrough mode.\n\nIn the Members section, add members, that is, virtual machines, to the balancing pool by clicking Add. Each VM can be included to multiple balancing pools.\nIn the Add members window that opens, select the desired VMs, and then click Add.\n\nYou can select only between VMs that are connected to the chosen network.\n\nIn the Health monitor section, select the protocol that will be used for monitoring members availability:\n\nHTTP/HTTPS. The HTTP/HTTPS method GET will be used to check for the response status code 200. Additionally, specify the URL path to the health monitor.\nTCP/UDP. The health monitor will check the TCP/UDP connection on the backend port.\nPING. The health monitor will check members\u00e2\u0080\u0099 IP addresses.\n\nBy default, the health monitor removes a member from a balancing pool if it fails three consecutive health checks of five-second intervals. When a member returns to operation and responds successfully to three consecutive health checks, it is added to the pool again. You can manually set the health monitor parameters, such as the interval after which VM health is checked, the time after which the monitor times out, healthy and unhealthy thresholds. To change the default parameters, click Edit parameters, enter the desired values, and then click Save.\n\n\r\n                                Click Create.\r\n                     \n\nThe newly added pool will appear in the list of balancing pools.\nTo edit a balancing pool\n\nTo edit the balancing settings such as the balancing algorithm and session persistence, click the ellipsis icon next to a pool, and then click Edit. \nTo edit the health monitor parameters, click the ellipsis icon next to a pool, and then click Edit health monitor.\n\nTo add more members to a balancing pool\n\nClick the ellipsis icon next to the required balancing pool, and then click + Add members.\nIn the Add members window, select virtual machines to be added to the balancing pool, and then click Add.\n\nTo remove a balancing pool\n\nClick the ellipsis icon next to the required balancing pool, and then click Delete.\nClick Delete in the confirmation window.",
        "paragraphs": [],
        "cli_examples": [],
        "panel_examples": [],
        "url": "https://docs.virtuozzo.com/virtuozzo_hybrid_infrastructure_6_0_self_service_guide/managing-balancing-pools.html"
    },
    {
        "title": "Managing Kubernetes clusters",
        "content": "Managing Kubernetes clusters\nSelf-service users can deploy ready-to-use Kubernetes clusters with persistent storage for managing containerized applications.\nA Kubernetes cluster includes the following components:\n\nKubernetes version\nUnderlying OS\nContainer runtime\nNetwork plugin\n\nv1.22.2, v1.23.5\nFedora 37 CoreOS\nDocker 20.10.23\n\nFlannel VXLAN (for public VM networks)\nFlannel host-gw (for private VM networks)\n\nv1.24.3, v1.25.7\ncontainerd 1.6.15\n\nLimitations\n\nKubernetes versions 1.15.x\u00e2\u0080\u00931.21.x are no longer supported. Kubernetes clusters created with these versions are marked with the Deprecated tag.\nKubernetes cluster certificates are issued for five years. To renew the certificates, use the openstack coe ca rotate command, as described in the OpenStack documentation.",
        "paragraphs": [],
        "cli_examples": [],
        "panel_examples": [],
        "url": "https://docs.virtuozzo.com/virtuozzo_hybrid_infrastructure_6_0_self_service_guide/managing-kubernetes-clusters.html"
    },
    {
        "title": "Managing guest tools",
        "content": "Managing guest tools\nThis section explains how to install and uninstall the guest tools. This functionality is required for creating consistent snapshots of a running VM\u00e2\u0080\u0099s disks.\nLimitations\n\nGuest tools rely on the QEMU guest agent that is installed alongside the tools. The agent service must be running for the tools to work.\n\nPrerequisites\n\nVirtual machines are created, as described in Creating virtual machines.\nThe virtual machine has a guest operating system installed.",
        "paragraphs": [],
        "cli_examples": [],
        "panel_examples": [],
        "url": "https://docs.virtuozzo.com/virtuozzo_hybrid_infrastructure_6_0_self_service_guide/managing-guest-tools.html"
    },
    {
        "title": "Managing images",
        "content": "Managing images\nVirtuozzo Hybrid Infrastructure allows you to upload ISO images and templates that can be used to create VM volumes:\n\nAn ISO image is a typical OS distribution that needs to be installed on disk. You can upload an ISO image to the compute cluster.\nA template is a ready boot volume in the QCOW2 format with an installed operating system and applications. Many OS vendors offer templates of their operating systems under the name \u00e2\u0080\u009ccloud images\u00e2\u0080\u009d. You can upload a cloud image from the OS official repository or prepare your own template in the compute cluster.\n\nPrerequisites\n\nKnowledge of the supported guest operating systems listed in Supported guest operating systems. \r\n\t\t",
        "paragraphs": [],
        "cli_examples": [],
        "panel_examples": [],
        "url": "https://docs.virtuozzo.com/virtuozzo_hybrid_infrastructure_6_0_self_service_guide/managing-images.html"
    },
    {
        "title": "Managing router interfaces",
        "content": "Managing router interfaces\nPrerequisites\n\nYou have a virtual router created, as described in Managing virtual routers.\n\nTo add an external router interface\n\nIf you already have an external gateway, remove the existing one first.\nOn the Routers screen, click the router name to open the list of its interfaces.\nClick Add on the toolbar, or click Add interface if there are no interfaces to show.\n\nIn the Add interface window, do the following:\n\nSelect External gateway.\nFrom the Network drop-down menu, select a physical network to connect to the router. The new interface will pick an unused IP address from the selected physical network. You can also provide a specific IP address from the selected physical network to assign to the interface in the IP address field.\n\nSelect or deselect the SNAT check box to enable or disable SNAT on the external gateway of the router. With SNAT enabled, the router replaces VM private IP addresses with the public IP address of its external gateway.\n\nClick Add.\n\nTo add an internal router interface\n\nOn the Routers screen, click the router name to open the list of its interfaces.\nClick Add.\n\nIn the Add interface window, select a network to connect to the router from the Network drop-down menu. The new interface will attempt to use the gateway IP address of the selected virtual network by default. If it is in use, specify an unused IP address from the selected virtual network to assign to the interface in the IP address field.\n\nClick Add.\n\nTo edit external interface parameters\n\nClick the ellipsis icon next to the external interface, and then click Edit. \nIn the Edit interface window, change the  IP address or configure SNAT. \nClick Save to save your changes.\n\nTo remove a router interface \n\nSelect the interface you want to remove.\nClick the ellipsis icon next to it, and then click Delete.\nIn the confirmation window, click Delete.",
        "paragraphs": [],
        "cli_examples": [],
        "panel_examples": [],
        "url": "https://docs.virtuozzo.com/virtuozzo_hybrid_infrastructure_6_0_self_service_guide/managing-router-interfaces.html"
    },
    {
        "title": "Managing static routes",
        "content": "Managing static routes\nYou can also configure static routes of a router by manually adding entries into its routing table. This can be useful, for example, if you do not need a mutual connection between two virtual networks and want only one virtual network to be accessible from the other.\nConsider the following example:\n\nThe virtual machine VM1 is connected to the virtual network private1 (192.168.128.0/24) via the network interface with IP address 192.168.128.10.\nThe virtual machine VM2 is connected to the virtual network private2 (192.168.30.0/24) via the network interface with IP address 192.168.30.10.\nThe router router1 connects the network private1 to the physical network via the external gateway with the IP address 10.94.129.73.\nThe router router2 connects the network private2 to the physical network via the external gateway with the IP address 10.94.129.74.\n\nTo be able to access VM2 from VM1, you need to add a static route for router1, specifying the CIDR of private2, that is 192.168.30.0/24, as the destination subnet and the external gateway IP address of router2, that is 10.94.129.74, as the next hop IP address. In this case, when an IP packet for 192.168.30.10 reaches router1, it will be forwarded to router2 and then to VM2.\nPrerequisites\n\nYou have a virtual router created, as described in Managing virtual routers.\n\nTo create a static route for a router\n\nOn the Routers screen, click the router name. Open the Static routes tab, and then click Add on the right pane. If there are no routes to show, click Add static route.\n\nIn the Add static route window, specify the destination subnet range and mask in CIDR notation and the next hop\u00e2\u0080\u0099s IP address. The next hop\u00e2\u0080\u0099s IP address must belong to one of the networks that the router is connected to.\n\nClick Add.\n\nTo edit a static route\n\nClick the ellipsis icon next to the required static route, and then click Edit. \nIn the Edit static route window, change the desired parameters, and then click Save.\n\nTo remove a static route\n\nClick the ellipsis icon next to the static route you want to remove, and then click Delete. ",
        "paragraphs": [],
        "cli_examples": [],
        "panel_examples": [],
        "url": "https://docs.virtuozzo.com/virtuozzo_hybrid_infrastructure_6_0_self_service_guide/managing-static-routes.html"
    },
    {
        "title": "Managing security group rules",
        "content": "Managing security group rules\nYou can modify security groups by adding and removing rules. Editing rules is not available. If you need to change the existing rule, remove it and re-create with the required parameters.\nPrerequisites\n\nYou have a security group created, as described in Creating and deleting security groups.\n\nTo add a rule to a security group\n\nOn the Security groups screen, click the security group to add a rule to.\nOn the group right pane, click Add in the Inbound or Outbound section to create a rule for incoming or outgoing traffic.\nSpecify the rule parameters:\r\n\t\t\tSelect a protocol from the list or enter a number from 0 to 255.Enter a single port or a port range. Some protocols already have a predefined port range. For example, the port for SSH is 22.Select a predefined subnet CIDR or an existing security group.\nClick the check mark to save the changes.\n\nAs soon as the rule is created, it is applied to all of the virtual machines assigned to the security group.\n\nTo remove a rule from a security group\n\nOn the Security groups screen, click the required security group.\nOn the group right pane, click the bin icon next to a rule you want to remove.\n\nAs soon as the rule is removed, this change is applied to all of the virtual machines assigned to the security group.",
        "paragraphs": [],
        "cli_examples": [],
        "panel_examples": [],
        "url": "https://docs.virtuozzo.com/virtuozzo_hybrid_infrastructure_6_0_self_service_guide/managing-security-group-rules.html"
    },
    {
        "title": "Managing security groups",
        "content": "Managing security groups\nA security group is a set of network access rules that control incoming and outgoing traffic to virtual machines assigned to this group. With security group rules, you can specify the type and direction of traffic that is allowed access to a virtual interface port. Traffic that does not satisfy any rule is dropped.\nFor each project, the default security group is automatically created in the compute cluster. This group allows all traffic on all ports for all protocols and cannot be deleted. When you attach a network interface to a VM, the interface is associated with the default security group, unless you explicitly select a custom security group.\nYou can assign one or more security groups to both new and existing virtual machines. When you add rules to security groups or remove them, the changes are enforced at runtime.\nLimitations\n\nYou can manage only IPv4 security group rules.",
        "paragraphs": [],
        "cli_examples": [],
        "panel_examples": [],
        "url": "https://docs.virtuozzo.com/virtuozzo_hybrid_infrastructure_6_0_self_service_guide/managing-security-groups.html"
    },
    {
        "title": "Managing Kubernetes worker groups",
        "content": "Managing Kubernetes worker groups\nTo meet system requirements of applications running in Kubernetes clusters, you can have worker nodes with different number of CPUs and amount of RAM. Creating workers with different flavors is possible by using worker groups. \nWhen creating a Kubernetes cluster, you can specify the configuration of only one worker group, the default worker group. After the cluster is created, add as many worker groups as you need. If required, you can also edit the number of workers in a group later.\nLimitations\n\nWorker groups are not available for Kubernetes version 1.15.x.\nThe default worker group cannot be deleted.\nIn Kubernetes version 1.21.x and earlier, autoscaling to zero nodes is not supported.\n\nPrerequisites\n\nA Kubernetes cluster is created, as described in Creating and deleting Kubernetes clusters.\n\nTo add a worker group\n\nOn the Kubernetes clusters screen, click a Kubernetes cluster.\nOn the cluster right pane, navigate to the Groups tab.\nIn the Workers section, click Add.\nIn the Add worker group window, specify a name for the group.\n\nIn the Worker group section,  select a flavor for each worker, and then decide whether you want to allow automatic scaling of the worker group:\n\nWith Autoscaling enabled, the number of workers will be automatically increased if there are pods stuck in the pending state due to insufficient resources, and reduced if there are workers with no pods running on them. For scaling of the worker group, set its minimum and maximum size.\n\nSome types of pods can prevent the autoscaler from removing a worker. To see a list of such pod types, refer to the official Kubernetes Autoscaler documentation.\n\nWith Autoscaling disabled, the number of worker nodes that you set will be permanent.\n\nIn the Labels section, enter labels that will be used to specify supplementary parameters for this Kubernetes cluster in the key=value format. For example: selinux_mode=permissive. Currently, only the selinux and flannel_network_cidr labels are supported. You can use other labels at your own risk. To see the full list of supported labels, refer to the OpenStack documentation.\n\nClick Add.\n\nWhen the worker group is created, you can assign pods to these worker nodes, as explained in Assigning Kubernetes pods to specific nodes.\nTo edit the number of workers in a group\n\nOn the Kubernetes cluster right pane, navigate to the Groups tab.\n\nIn the Workers section, click the pencil icon for the default worker group or the ellipsis icon for all other groups, and then select Edit.\n\nIn the Edit workers window, enable or disable Autoscaling, or change the number of workers in the group.\nClick Save.\n\nTo delete a worker group\nClick the ellipsis icon next to the required worker group, and then select Delete. The worker group will be deleted along with all of its workers. After the deletion, the worker group data will be lost.",
        "paragraphs": [],
        "cli_examples": [],
        "panel_examples": [],
        "url": "https://docs.virtuozzo.com/virtuozzo_hybrid_infrastructure_6_0_self_service_guide/managing-kubernetes-worker-groups.html"
    },
    {
        "title": "Managing notifications",
        "content": "Managing notifications\nThe notification center stores and shows notifications about recent tasks of the current user in the management panel. Notifications are displayed only for tasks performed during the current user session and cleared out when the user logs out.\nA user is informed about each task by a pop-up notification in the bottom right corner of the screen. The same notification also appears in the notification center. After the pop-up window is closed, the notification is available in the notification center.\nThe following table describes all of the supported notification types:\n\nNotification type\nIcon\nDescription\nRetention period of a pop-up window\nRetention period in the notification center\n\nInfo\n\nNotifications about a task launch\n3 seconds\n10 minutes\n\nSuccess\n\nNotifications about successfully completed tasks\n3 seconds\n10 minutes\n\nError\n\nNotifications about failed tasks\n10 seconds\n50 minutes\n\nIn progress\n\nLong-running tasks, such as image upload or problem report creation\nTask time\nTask time\n\nTo view notifications\n\nOn any screen, click the bell icon in the top right corner. Next to the bell icon, you can see the notification counter, or the loading sign if you have a running task.\nTo view notifications of a particular type, click All types, and then select the notification type you wish to be displayed in the notification center.\n\nTo clear notifications\n\nOn any screen, click the bell icon in the top right corner.\nTo clear only one notification, click the cross icon next to it.\nTo clear all of the notifications, click Clear all above the notification list.\n\nTo configure pop-up notifications\n\nOn any screen, click the bell icon in the top right corner.\n\nClick the cogwheel icon, and then clear notification types that you do not wish to be shown in a pop-up window. Only the selected notification types will appear as pop-up messages.\n\nTo mute pop-up notifications\n\nOn any screen, click the bell icon in the top right corner.\n\nClick the cogwheel icon, and then turn on the Do not disturb mode.\n\nThe bell icon will be greyed out, and the notification counter will disappear. While this mode is on, pop-up notifications are disabled. However, all notifications are still available in the notification center.\nTo unmute pop-up notifications\n\nOn any screen, click the greyed out bell icon in the top right corner.\n\nClick Turn off, to turn off the Do not disturb mode.",
        "paragraphs": [],
        "cli_examples": [],
        "panel_examples": [],
        "url": "https://docs.virtuozzo.com/virtuozzo_hybrid_infrastructure_6_0_self_service_guide/managing-notifications.html"
    },
    {
        "title": "Managing SSH keys",
        "content": "Managing SSH keys\nUse of SSH keys allows you to secure SSH access to virtual machines. You can generate a key pair on a client from which you will connect to VMs via SSH. The private key will be stored on the client and you will be able to copy it to other nodes. The public key will need to be uploaded to Virtuozzo Hybrid Infrastructure and specified during VM creation. It will be injected into the VM by cloud-init and used for OpenSSH authentication. Keys injection is supported for both Linux and Windows virtual machines.\nLimitations\n\nYou can specify an SSH key only if you deploy a VM from a template or boot volume (not an ISO image).\nIf a key has been injected into one or more VMs, it will remain inside those VMs even if you delete it from the panel.\n\nPrerequisites\n\nThe cloud-init utility and OpenSSH Server are installed in a VM template or boot volume, as instructed in Preparing templates.\n\nTo add a public key\n\nGenerate an SSH key pair on a client by using the ssh-keygen utility:# ssh-keygen -t rsa\n\nOn the SSH keys screen, click Add key.\n\nIn the Add SSH key window, specify a key name and copy the key value from the generated public key located in /root/.ssh/id_rsa.pub. Optionally, you can add a key description.\n\nA description should not contain any personally identifiable information or sensitive business data.\n\nTo delete a public key\n\nOn the SSH keys screen, select the SSH key you want to delete, and then click Delete.\nClick Delete in the confirmation window.\n\nIf this key has been injected into one or more virtual machines, it will remain inside those virtual machines.",
        "paragraphs": [],
        "cli_examples": [],
        "panel_examples": [],
        "url": "https://docs.virtuozzo.com/virtuozzo_hybrid_infrastructure_6_0_self_service_guide/managing-ssh-keys.html"
    },
    {
        "title": "Managing users and projects",
        "content": "Managing users and projects\nIn the self-service panel, a domain administrator can manage users and their assignment to projects within a domain. If granted the required permission, a domain administrator can also manage projects and their quotas.\nLimitations\n\nOnly domain administrators can manage users and projects.",
        "paragraphs": [],
        "cli_examples": [],
        "panel_examples": [],
        "url": "https://docs.virtuozzo.com/virtuozzo_hybrid_infrastructure_6_0_self_service_guide/managing-users-and-projects.html"
    },
    {
        "title": "Managing load balancers",
        "content": "Managing load balancers\nVirtuozzo Hybrid Infrastructure offers load balancing as a service for the compute infrastructure. Load balancing ensures fault tolerance and improves performance of web applications by distributing incoming network traffic across virtual machines from a balancing pool. A load balancer receives and then routes incoming requests to a suitable VM based on a configured balancing algorithm and VM health.",
        "paragraphs": [],
        "cli_examples": [],
        "panel_examples": [],
        "url": "https://docs.virtuozzo.com/virtuozzo_hybrid_infrastructure_6_0_self_service_guide/managing-load-balancers.html"
    },
    {
        "title": "Managing virtual machine power state",
        "content": "Managing virtual machine power state\nPrerequisites\n\nVirtual machines are created, as described in Creating virtual machines.\n\nTo manage the power state of a virtual machine\n\nClick the virtual machine or the ellipsis button next to it to see the full list of actions available for the current state. \n\nTo power up a VM, click Run.\nTo gracefully shut down a running VM, click Shut down. The default shutdown timeout, after which a virtual machine will be powered off, is 10 minutes.\nTo forcibly cut off power from a VM, click Power off.\nTo softly reboot a running VM, click Reboot.\nTo reboot a VM without the guest OS graceful shutdown, click Hard reboot.\nTo save the current VM state to a file, click Suspend. This may prove useful, for example, if you need to restart the host but do not want to quit the applications currently running in the VM or restart its guest OS.\nTo restore a VM from the suspended state, click Resume.",
        "paragraphs": [],
        "cli_examples": [],
        "panel_examples": [],
        "url": "https://docs.virtuozzo.com/virtuozzo_hybrid_infrastructure_6_0_self_service_guide/managing-virtual-machine-power-state.html"
    },
    {
        "title": "Managing virtual networks",
        "content": "Managing virtual networks\nLimitations\n\nYou can delete a compute network only if no VMs are connected to it.\n\nTo add a new virtual network\n\n\r\n                On the Networks screen, click Create virtual network.\r\n            \n\r\n                On the Network configuration step, do the following:\r\n            Enable or disable IP address management:With IP address management enabled, VMs connected to the network will automatically be assigned IP addresses from allocation pools by the built-in DHCP server and use custom DNS servers. Additionally, spoofing protection will be enabled for all VM network ports by default. Each VM network interface will be able to accept and send IP packets only if it has IP and MAC addresses assigned. You can disable spoofing protection manually for a VM interface, if required.With IP address management disabled, VMs connected to the network will obtain IP addresses from the DHCP servers in that network, if any. Also, spoofing protection will be disabled for all VM network ports, and you cannot enable it manually. This means that each VM network interface, with or without assigned IP and MAC addresses, will be able to accept and send IP packets.In any case, you will be able to manually assign static IP addresses from inside the VMs.Specify a name, and then click Next.\n\nIf you enabled IP address management, you will move on to the IP address management step, where you can add an IPv4 subnet:\n\nIn the Subnets section, click Add and select IPv4 subnet.\nIn the Add IPv4 subnet window, specify the network\u00e2\u0080\u0099s IPv4 address range and, optionally, specify a gateway. If you leave the Gateway field blank, the gateway will be omitted from network settings.\n\nEnable or disable the built-in DHCP server:\n\nWith the DHCP server enabled, VM network interfaces will automatically be assigned IP addresses: either from allocation pools or, if there are no pools, from the network\u00e2\u0080\u0099s entire IP range. The DHCP server will receive the first two IP addresses from the IP pool. For example:\n\n In a subnet with CIDR 192.168.128.0/24 and without a gateway, the DHCP server will be assigned the IP addresses 192.168.128.1 and 192.168.128.2.\n In a subnet with CIDR 192.168.128.0/24 and the gateway IP address set to 192.168.128.1, the DHCP server will be assigned the IP addresses 192.168.128.2 and 192.168.128.3.\n\nWith the DHCP server disabled, VM network interfaces will still get IP addresses, but you will have to manually assign them inside VMs.\n\nThe virtual DHCP service will work only within the current network and will not be exposed to other networks.\n\nSpecify one or more allocation pools (ranges of IP addresses that will be automatically assigned to VMs).\nSpecify DNS servers that will be used by virtual machines. These servers can be delivered to VMs via the built-in DHCP server or by using the cloud-init network configuration (if cloud-init is installed in the VM).\nClick Add.\n\nOn the Summary step, review the configuration, and then click Create virtual network.\n\nTo edit parameters of a virtual network\n\nOn the Networks screen, click the required network. \nOn the network right pane, click the pencil icon next to the network name or IPv4 subnet.\n Make changes and save them.\n\nTo delete a compute network\nClick the ellipsis icon next to the required network, and then click Delete. To remove multiple compute networks at once, select them, and then click Delete. ",
        "paragraphs": [],
        "cli_examples": [],
        "panel_examples": [],
        "url": "https://docs.virtuozzo.com/virtuozzo_hybrid_infrastructure_6_0_self_service_guide/managing-virtual-networks.html"
    },
    {
        "title": "Managing virtual routers",
        "content": "Managing virtual routers\nVirtual routers provide L3 services such as routing and Source Network Address Translation (SNAT) between virtual and physical networks, or different virtual networks:\n\nA virtual router between virtual and physical networks provides access to public networks, such as the Internet, for VMs connected to this virtual network.\nA virtual router between different virtual networks provides network communication for VMs connected to these virtual networks.\n\nA virtual router has two types of ports:\n\nAn external gateway that is connected to a physical network.\nAn internal port that is connected to a virtual network.\n\nWith virtual routers, you can do the following:\n\nCreate virtual routers\nChange external or internal router interfaces\nCreate, edit, and delete static routes\nChange a router name\nDelete a router\n\nLimitations\n\nA router can only connect networks that have IP management enabled.\n\nYou can delete a virtual router if no floating IP addresses are associated with any network it is connected to.\n\nPrerequisites\n\nCompute networks are created, as described in Managing virtual networks.\nThe compute networks that are to be connected to a router have a gateway specified.\n\nTo create a virtual router\n\nNavigate to the Routers screen, and then click Add router.\n\nIn the Add router window:\n\nSpecify a router name.\nFrom the Network drop-down menu, select a physical network through which external access will be provided via an external gateway. The new external gateway will pick an unused IP address from the selected physical network.\nIn the Add internal interfaces section, select one or more virtual networks to connect to a router via internal interfaces. The new internal interfaces will attempt to use the gateway IP address of the selected virtual networks by default.\n\nSelect or deselect the SNAT check box to enable or disable SNAT on the external gateway of the router. With SNAT enabled, the router replaces VM private IP addresses with the public IP address of its external gateway.\n\nClick Create.",
        "paragraphs": [],
        "cli_examples": [],
        "panel_examples": [],
        "url": "https://docs.virtuozzo.com/virtuozzo_hybrid_infrastructure_6_0_self_service_guide/managing-virtual-routers.html"
    },
    {
        "title": "Managing volumes",
        "content": "Managing volumes\nA volume in Virtuozzo Hybrid Infrastructure is a virtual disk drive that can be attached to a virtual machine. The integrity of data in volumes is protected by the redundancy mode specified in the storage policy.",
        "paragraphs": [],
        "cli_examples": [],
        "panel_examples": [],
        "url": "https://docs.virtuozzo.com/virtuozzo_hybrid_infrastructure_6_0_self_service_guide/managing-volumes.html"
    },
    {
        "title": "Managing volume snapshots",
        "content": "Managing volume snapshots\nYou can save the current state of a VM file system or user data by creating a snapshot of a volume. A snapshot of a boot volume may be useful, for example, before updating VM software. If anything goes wrong, you will be able to revert the VM to a working state at any time. A snapshot of a data volume can be used for backing up user data and testing purposes.\nPrerequisites\n\nTo create a consistent snapshot of a running VM\u00e2\u0080\u0099s volume, the guest tools must be installed in the VM, as described in Installing guest tools. The QEMU guest agent included in the guest tools image automatically quiesces the filesystem during snapshotting.\n\nTo create a snapshot of a volume\n\nOn the Volumes screen, click a volume.\n\nIn the volume right pane, switch to Snapshots, and then click Create snapshot.\n\nTo manage a volume snapshot\n\nSelect a volume and open the Snapshots tab on its right pane.\n\nYou can do the following:\n\nCreate a new volume from the snapshot.\nCreate a template from the snapshot.\n\nDiscard all changes that have been made to the volume since the snapshot was taken. This action is available only for VMs with the \"Shut down\" and \"Shelved offloaded\" statuses.\n\nAs each volume has only one snapshot branch, all snapshots created after the snapshot you are reverting to will be deleted. If you want to save a subsequent snapshot before reverting, create a volume or an image from it first.\n\nChange the snapshot name and description.\n\nA description should not contain any personally identifiable information or sensitive business data.\n\nReset the snapshot stuck in an \"Error\" state or transitional state to the \"Available\" state. \nRemove the snapshot.\n\nTo perform these actions, click the ellipsis button next to a snapshot, and then click the corresponding action.",
        "paragraphs": [],
        "cli_examples": [],
        "panel_examples": [],
        "url": "https://docs.virtuozzo.com/virtuozzo_hybrid_infrastructure_6_0_self_service_guide/managing-volume-snapshots.html"
    },
    {
        "title": "Managing virtual machines",
        "content": "Managing virtual machines\nEach virtual machine (VM) is an independent system with an independent set of virtual hardware. Its main features are the following:\n\nA virtual machine resembles and works like a regular computer. It has its own virtual hardware. Software applications can run in virtual machines without any modifications or adjustment.\nVirtual machine configuration can be changed easily, for example, by adding new virtual disks or memory.\nAlthough virtual machines share physical hardware resources, they are fully isolated from each other (file system, processes, sysctl variables) and the compute node.\nA virtual machine can run any supported guest operating system.\n\nThe following table lists the current virtual machine configuration limits:\n\nResource\nLimit\n\nRAM\n1 TiB\n\nCPU\n64 virtual CPUs\n\nStorage\n15 volumes, 512 TiB each\n\nNetwork\n15 NICs",
        "paragraphs": [],
        "cli_examples": [],
        "panel_examples": [],
        "url": "https://docs.virtuozzo.com/virtuozzo_hybrid_infrastructure_6_0_self_service_guide/managing-virtual-machines.html"
    },
    {
        "title": "Modifying and deleting load balancers",
        "content": "Modifying and deleting load balancers\nTo edit the name or description of a load balancer\n\nOn the Load balancers screen, click a load balancer you want to edit.\nOn the load balancer right pane, click Edit.\n\nIn the Edit load balancer window, modify the name or description, and then click Save.\n\nA description should not contain any personally identifiable information or sensitive business data.\n\nTo disable or enable a load balancer\n\nOn the Load balancers screen, click a load balancer you want to change.\nOn the load balancer right pane, click Disable or Enable, depending on the load balancer's current state.\n\nTo remove a load balancer\n\nOn the Load balancers screen, click a load balancer to delete.\nOn the load balancer right pane, click Delete.\nClick Delete in the confirmation window.",
        "paragraphs": [],
        "cli_examples": [],
        "panel_examples": [],
        "url": "https://docs.virtuozzo.com/virtuozzo_hybrid_infrastructure_6_0_self_service_guide/modifying-and-deleting-load-balancers.html"
    },
    {
        "title": "Monitoring virtual machines",
        "content": "Monitoring virtual machines\nPrerequisites\n\nVirtual machines are created, as described in Creating virtual machines.\n\nTo monitor virtual machine\u00e2\u0080\u0099s CPU, storage, and network usage\nSelect the VM and open the Monitoring tab.\nThe default time interval for the charts is twelve hours. To zoom into a particular time interval, select the internal with the mouse; to reset zoom, double-click any chart.\nThe following performance charts are available:\n\nCPU / RAM\n\nCPU and RAM usage by the VM.\nNetwork\n\nIncoming and outgoing network traffic.\nStorage read/write\n\nAmount of data read and written by the VM.\nRead/write latency\n\nRead and write latency. Hovering the mouse cursor over a point on the chart, you can also see the average and maximum latency for that moment, as well as the 95 and 99 percentiles.\n\nAveraged values are calculated every five minutes.",
        "paragraphs": [],
        "cli_examples": [],
        "panel_examples": [],
        "url": "https://docs.virtuozzo.com/virtuozzo_hybrid_infrastructure_6_0_self_service_guide/monitoring-virtual-machines.html"
    },
    {
        "title": "Monitoring load balancers",
        "content": "Monitoring load balancers\nTo monitor performance and health of a load balancer\nOpen the Overview tab on the load balancer right pane.\nThe following charts are available:\n\nMembers state\n\nThe total number of members in the balancing pools grouped by status: \u00e2\u0080\u009cHealthy,\u00e2\u0080\u009d \u00e2\u0080\u009cUnhealthy,\u00e2\u0080\u009d \u00e2\u0080\u009cError,\u00e2\u0080\u009d and \u00e2\u0080\u009cDisabled\u00e2\u0080\u009d.\nNetwork\n\nIncoming and outgoing network traffic.\nActive connections\n\nThe number of active connections.\nError requests\n\nThe number of error requests.",
        "paragraphs": [],
        "cli_examples": [],
        "panel_examples": [],
        "url": "https://docs.virtuozzo.com/virtuozzo_hybrid_infrastructure_6_0_self_service_guide/monitoring-load-balancers.html"
    },
    {
        "title": "Preparing templates",
        "content": "Preparing templates\nYou may need to create a template in these cases:\n\nTo rescue a virtual machine\nTo create a VM accessible via SSH\nTo create a VM customizable with user data\n\nPreparation overview\n\nInstall cloud-init and OpenSSH Server in the virtual machine.\n\nEnable logging for virtual machines that will be created from the template.\n\nConvert the VM boot volume to the template, as described in Creating images from volumes.",
        "paragraphs": [],
        "cli_examples": [],
        "panel_examples": [],
        "url": "https://docs.virtuozzo.com/virtuozzo_hybrid_infrastructure_6_0_self_service_guide/preparing-templates.html"
    },
    {
        "title": "Preparing Linux templates",
        "content": "Preparing Linux templates\nAs all Linux guests have OpenSSH Server preinstalled by default, you only need to make sure a Linux template has cloud-init installed.\nThe easiest way to get a Linux template with cloud-init installed is to obtain it from its official repository. You can also create a Linux template from an existing boot volume.",
        "paragraphs": [],
        "cli_examples": [],
        "panel_examples": [],
        "url": "https://docs.virtuozzo.com/virtuozzo_hybrid_infrastructure_6_0_self_service_guide/preparing-linux-templates.html"
    },
    {
        "title": "Reconfiguring virtual machines",
        "content": "Reconfiguring virtual machines\nOnce you create a virtual machine, you can manage its CPU and RAM resources, as well as network interfaces and volumes.\nPrerequisites\n\nVirtual machines are created, as described in Creating virtual machines.",
        "paragraphs": [],
        "cli_examples": [],
        "panel_examples": [],
        "url": "https://docs.virtuozzo.com/virtuozzo_hybrid_infrastructure_6_0_self_service_guide/reconfiguring-virtual-machines.html"
    },
    {
        "title": "Monitoring Kubernetes clusters",
        "content": "Monitoring Kubernetes clusters\n\nThis feature is experimental and not intended for use in production environments.\n\nIf you have enabled integrated monitoring during your Kubernetes cluster deployment, that means that the cluster has the monitoring_enabled=true label and the following components installed:\n\nPrometheus for data collection, storage, and search:\n\nnode-exporter exposes various server-level and OS-level metrics.\nkube-state-metrics generates metrics on the state of Kubernetes objects.\n\nAlertmanager for alarm aggregation, processing, and dispatch.\nGrafana server for metrics visualization.\n\nFor instructions on how to create and configure Alertmanager and Prometheus instances, refer to the kube-prometheus documentation.\nThe Grafana server is accessible from within a Kubernetes cluster at the magnum-grafana.kube-system.svc.cluster.local DNS name and TCP port 80.\nThe metrics on the state of Kubernetes objects are exported at the /metrics HTTP endpoint on the listening port: magnum-kube-state-metrics.kube-system.svc.cluster.local:8080/metrics. The metrics can be consumed either by Prometheus itself or by a scraper that is able to scrape a Prometheus client endpoint. For the list of exposed metrics, refer to kube-state-metrics documentation.\nPrerequisites\n\nA Kubernetes cluster with enabled integrated monitoring is created, as described in Creating and deleting Kubernetes clusters.\n\nTo access the Kubernetes Grafana dashboards\n\nOn the Kubernetes clusters screen, click a Kubernetes cluster.\nOn the cluster right pane, click Download kubeconfig. The .kubeconfig file will be downloaded to your client machine.\nOn your client machine, install and set up the kubectl tool, to be able to run commands against Kubernetes clusters, as described in the official documentation.\n\nSpecify the path to your Kubernetes configuration file in the KUBECONFIG environment variable:# export KUBECONFIG=<path_to_kubeconfig>\n\nCheck that the kube-prometheus stack is installed:# kubectl --namespace kube-system get pods -l \"release=magnum\"\r\nNAME                                                  READY  STATUS   RESTARTS  AGE\r\nmagnum-kube-prometheus-sta-operator-85f757c5dc-ckllb  1/1    Running  0         3d17h\r\nmagnum-kube-state-metrics-5cc46cbc5f-tclcv            1/1    Running  0         3d17h\r\nmagnum-prometheus-node-exporter-99kfc                 1/1    Running  0         3d3h\r\nmagnum-prometheus-node-exporter-gwgzr                 1/1    Running  0         3d17h\r\nmagnum-prometheus-node-exporter-q2pm2                 1/1    Running  0         3d17h\r\nmagnum-prometheus-node-exporter-sqsl7                 1/1    Running  0         2d22h\n\nObtain the password of the admin user:# kubectl get secret --namespace kube-system magnum-grafana \\\r\n-o jsonpath=\"{.data.admin-password}\" | base64 --decode ; echo\n\nConfigure the port forwarding for the Grafana pod:# kubectl --namespace kube-system port-forward service/magnum-grafana 3000:80\n\nLog in to http://localhost:3000 under the admin user by specifying its username and password obtained in step 6.\n\nIn the left menu, click Dashboards > Browse, and then select the dashboard you want to view.\n\nTo access the Prometheus user interface\n\nOn the Kubernetes clusters screen, click a Kubernetes cluster.\nOn the cluster right pane, click Download kubeconfig. The .kubeconfig file will be downloaded to your client machine.\nOn your client machine, install and set up the kubectl tool, to be able to run commands against Kubernetes clusters, as described in the official documentation.\n\nSpecify the path to your Kubernetes configuration file in the KUBECONFIG environment variable:# export KUBECONFIG=<path_to_kubeconfig>\n\nConfigure the port forwarding for the Prometheus pod:\r\n# kubectl --namespace kube-system port-forward service/magnum-kube-prometheus-sta-prometheus 9090\n\nVisit http://localhost:9090/graph to use the Prometheus expression browser and to graph expressions. You can also navigate to http://localhost:9090/metrics to view the list of exported metrics, or http://localhost:9090/alerts to view the alerting rules.\n\nTo access the Alertmanager user interface\n\nOn the Kubernetes clusters screen, click a Kubernetes cluster.\nOn the cluster right pane, click Download kubeconfig. The .kubeconfig file will be downloaded to your client machine.\nOn your client machine, install and set up the kubectl tool, to be able to run commands against Kubernetes clusters, as described in the official documentation.\n\nSpecify the path to your Kubernetes configuration file in the KUBECONFIG environment variable:# export KUBECONFIG=<path_to_kubeconfig>\n\nConfigure the port forwarding for the Alertmanager pod:\r\n# kubectl --namespace kube-system port-forward service/magnum-kube-prometheus-sta-alertmanager 9093\n\nVisit http://localhost:9093 to access the Alertmanager user interface.",
        "paragraphs": [],
        "cli_examples": [],
        "panel_examples": [],
        "url": "https://docs.virtuozzo.com/virtuozzo_hybrid_infrastructure_6_0_self_service_guide/monitoring-kubernetes-clusters.html"
    },
    {
        "title": "Managing VPN connections",
        "content": "Managing VPN connections\nWith Virtual Private Network (VPN) as a service, self-service users can extend virtual networks across public networks, such as the Internet. To connect two or more remote endpoints, VPNs use virtual connections tunneled through physical networks. To secure VPN communication, the traffic that flows between remote endpoints is encrypted. The VPN implementation uses the Internet Key Exchange (IKE) and IP Security (IPsec) protocols to establish secure VPN connections and is based on the strongSwan IPsec solution.\nVPN as a service can be used to establish a Site-to-Site VPN connection between a virtual network configured in Virtuozzo Hybrid Infrastructure and any other network with a VPN gateway that uses the IPsec and IKE protocols. With VPN as a service, you can connect the following workloads:\n\nOn-premises workloads with workloads hosted in Virtuozzo Hybrid Infrastructure\nWorkloads hosted in other clouds with workloads hosted in Virtuozzo Hybrid Infrastructure\nWorkloads hosted in different Virtuozzo Hybrid Infrastructure clusters\n\nTo better understand how a VPN works, consider the following example:\n\nIn the cluster 1, the virtual machine VM1 is connected to the virtual network privnet1 (192.168.10.0/24) via the network interface with IP address 192.168.10.10. The network privnet1 is exposed to public networks via the router router1 with the external port 10.10.10.5.\nIn the cluster 2, the virtual machine VM2 is connected to the virtual network privnet2 (192.168.20.0/24) via the network interface with IP address 192.168.20.20. The network privnet2 is exposed to public networks via the router router2 with the external port 10.10.10.4.\nThe VPN tunnel is created between the routers router1 and router2 that serve as VPN gateways, thus allowing mutual connectivity between the networks privnet1 and privnet2.\nThe virtual machines VM1 and VM2 are visible to each other at their private IP addresses. That is, VM1 can access VM2 at 192.168.20.20, and VM2 can access VM1 at 192.168.10.10.\n\nFor key exchange between communicating parties, two IKE versions are available: IKE version 1 (IKEv1) and IKE version 2 (IKEv2). IKEv2 is the latest version of the IKE protocol and it supports connecting multiple remote subnets.\n\nIn the example above:\n\nVPN1 uses the IKEv1 and connects the network network1 with the network3.\nVPN2 uses the IKEv2 and connects the network network2 with the two networks network4 and network5.\n\nLimitations\n\nCurrently, we support only Site-to-Site VPN connections. Point-to-Site VPN connections are not supported.",
        "paragraphs": [],
        "cli_examples": [],
        "panel_examples": [],
        "url": "https://docs.virtuozzo.com/virtuozzo_hybrid_infrastructure_6_0_self_service_guide/managing-vpn-connections.html"
    },
    {
        "title": "Preparing Windows templates",
        "content": "Preparing Windows templates\nWindows guests have neither Cloudbase-Init nor OpenSSH Server preinstalled by default. You need to install and configure them manually.\nTo install Cloudbase-Init and OpenSSH Server inside a Windows virtual machine\n\nLog in to a Windows VM.\nCreate a new administrator account that will be used for SSH connections and log in with it.\n\nTo install and configure OpenSSH Server:\n\nRun Windows PowerShell with administrator privileges and set the execution policy to unrestricted to be able to run scripts:> Set-ExecutionPolicy Unrestricted\r\n\n\nDownload OpenSSH Server (for example, from the GitHub repository), extract the archive into the C:\\Program Files directory, and then install it by running:> & 'C:\\Program Files\\OpenSSH-Win64\\install-sshd.ps1'\r\n\n\nStart the sshd service and set its startup type to \u00e2\u0080\u009cAutomatic\u00e2\u0080\u009d:> net start sshd> Set-Service sshd -StartupType Automatic\r\n\n\nOpen TCP port 22 for the OpenSSH service in the Windows Firewall:\n\nOn Windows 8.1, Windows Server 2012, and newer versions, run:> New-NetFirewallRule -Protocol TCP -LocalPort 22 -Direction Inbound -Action Allow -DisplayName OpenSSH\r\n\n\nOn Windows Server 2008/2008 R2, run:> netsh advfirewall firewall add rule name=sshd dir=in action=allow protocol=TCP localport=22\r\n\n\nOpen the C:\\ProgramData\\ssh\\sshd_config file:> notepad 'C:\\ProgramData\\ssh\\sshd_config'\r\n\nComment out the following lines at the end of the file:#Match Group administrators#AuthorizedKeysFile __PROGRAMDATA__/ssh/administrators_authorized_keys\r\n\nSave the changes.\n\nCreate the .ssh directory in C:\\Users\\<current_user> and an empty authorized_keys file inside it:> cd C:\\Users\\<current_user>> mkdir .ssh> notepad .\\.ssh\\authorized_keys\r\n\nRemove the .txt extension from the created file:> move .\\.ssh\\authorized_keys.txt .\\.ssh\\authorized_keys\r\n\n\nModify the permissions for the created file to disable inheritance:> icacls .\\.ssh\\authorized_keys /inheritance:r\r\n\n\nDownload Cloudbase-Init from https://cloudbase.it/cloudbase-init/#download, and then install it by following the procedure from the Installation section at https://cloudbase.it/cloudbase-init/.\n\nThe password for the user specified during the Cloudbase-Init installation will be reset on the next VM startup. If this user does not exist, a new user account will be created. You will be able to log in with this account by using the key authentication method or you can set a new password with a customization script. If there are multiple Windows users at the image preparation time, the passwords for other users will not be changed.\nWhen the Cloudbase-Init installation is complete, do not select the option to run Sysprep before clicking Finish. Otherwise, you will not be able to modify cloudbase-init.conf.\n\nRun Windows PowerShell with administrator privileges and open the file C:\\Program Files\\Cloudbase Solutions\\Cloudbase-Init\\conf\\cloudbase-init.conf:> notepad 'C:\\Program Files\\Cloudbase Solutions\\Cloudbase-Init\\conf\\cloudbase-init.conf'\r\n\nAdd metadata_services and plugins on two lines:metadata_services=\\cloudbaseinit.metadata.services.configdrive.ConfigDriveService,\\cloudbaseinit.metadata.services.httpservice.HttpServiceplugins=cloudbaseinit.plugins.common.mtu.MTUPlugin,\\cloudbaseinit.plugins.windows.ntpclient.NTPClientPlugin,\\cloudbaseinit.plugins.common.sethostname.SetHostNamePlugin,\\cloudbaseinit.plugins.windows.createuser.CreateUserPlugin,\\cloudbaseinit.plugins.common.networkconfig.NetworkConfigPlugin,\\cloudbaseinit.plugins.windows.licensing.WindowsLicensingPlugin,\\cloudbaseinit.plugins.common.sshpublickeys.SetUserSSHPublicKeysPlugin,\\cloudbaseinit.plugins.windows.extendvolumes.ExtendVolumesPlugin,\\cloudbaseinit.plugins.common.setuserpassword.SetUserPasswordPlugin,\\cloudbaseinit.plugins.common.userdata.UserDataPlugin,\\cloudbaseinit.plugins.windows.winrmlistener.ConfigWinRMListenerPlugin,\\cloudbaseinit.plugins.windows.winrmcertificateauth.\\ConfigWinRMCertificateAuthPlugin,\\cloudbaseinit.plugins.common.localscripts.LocalScriptsPlugin\r\n\n\nMake sure to remove all backslashes in the lines above.\n\nSave the changes.",
        "paragraphs": [],
        "cli_examples": [],
        "panel_examples": [],
        "url": "https://docs.virtuozzo.com/virtuozzo_hybrid_infrastructure_6_0_self_service_guide/preparing-windows-templates.html"
    },
    {
        "title": "Rescuing virtual machines",
        "content": "Rescuing virtual machines\nIf a VM experiences boot problems, you can send it to the rescue mode to access its boot volume. When a VM in the \u00e2\u0080\u009cActive\u00e2\u0080\u009d state is sent to the rescue mode, it is shut down softly first. Once the VM is in the rescue mode, you can connect to it via SSH or via the console. Its previous boot disk is now attached as a secondary one. You can mount the disk and repair it.\nLimitations\n\nThe rescue mode can use ISO images for booting both Linux and Windows virtual machines and QCOW2 images (templates) for booting Linux VMs. For instructions on making templates, refer to Preparing templates.\nYou can send a VM to the rescue mode only if its current status is \u00e2\u0080\u009cActive\u00e2\u0080\u009d or \u00e2\u0080\u009cShut down\u00e2\u0080\u009d.\nThere are only three actions available for the VM in the rescue mode: Console, Exit rescue mode, and Delete.\nIf a rescue image has cloud-init installed, then the VM booted from it can be accessed with the same SSH key that was used for its creation.\n\nPrerequisites\n\nVirtual machines are created, as described in Creating virtual machines.\n\nTo put a virtual machine to the rescue mode\n\nOn the Virtual machines screen, click the required VM on the list.\nOn the VM right pane, click the ellipsis button on the toolbar. Then, click Enter rescue mode.\n\nIn the Enter rescue mode window, select an image to rescue the VM with. By default, the initial image used for creating the VM is selected. Click Enter.\n\nThe machine status changes to \u00e2\u0080\u009cRescue\u00e2\u0080\u009d. \n\nTo return a virtual machine to normal operation\n\nOn the Virtual machines screen, click the required VM on the list.\nOn the VM right pane, click Exit rescue mode.\nIn the Exit rescue mode window, click Exit. The VM will be automatically rebooted.\n\nThe VM status changes to \u00e2\u0080\u009cActive\u00e2\u0080\u009d and it boots from the original root disk.\n\nIf the VM status changes to \u00e2\u0080\u009cError\u00e2\u0080\u009d when exiting the rescue mode, you can reset its status with the Reset state action. The VM should then return to the \u00e2\u0080\u009cRescue\u00e2\u0080\u009d status again.\n\nTo exit the rescue mode for a Windows VM\nThere might be an issue of exiting the rescue mode for a Windows VM. If in the rescue mode you set the original system disk online, its ID becomes the same as that of the rescue disk. Then, when you try to exit the rescue mode, the boot loader cannot find the proper boot disk. To resolve the ID conflict, follow the steps:\n\nWith the VM in the rescue mode, open the Disk Management window and note the numbers of the original system disk (offline) and the rescue disk (online). Set the original system disk to Online.\n\nTo edit the boot configuration, enter the following command in the Command Prompt window:> bcdedit /store <the original system disk name>:\\boot\\bcd\r\n\n\nReview the output and check that the rescue disk is the target for objects in the output (partition=<the rescue disk name>).\nIf the objects do not point to drive C, fix it with the following commands:> bcdedit /store <the original system disk name>:\\boot\\bcd \\\r\n/set {default} osdevice partition=<the rescue disk name>:\r\n> bcdedit /store <the original system disk name>:\\boot\\bcd \\\r\n/set {default} device partition=<the rescue disk name>:\r\n> bcdedit /store <the original system disk name>:\\boot\\bcd \\\r\n/set {bootmgr} device partition=<the rescue disk name>:\r\n> bcdedit /store <the original system disk name>:\\boot\\bcd \\\r\n/set {memdiag} device partition=<the rescue disk name>:\r\n\n\nTo view the available disks, enter the following commands in the command line:> DISKPART\r\n> LIST DISK\r\n\nMatch the disk number and name to those displayed in the Disk Management window.\n\nTo get the ID of the rescue disk, run the following commands:> SELECT DISK <the rescue disk number>\r\n> UNIQUEID DISK\r\n\nRecord the disk ID, you will need it later.\n\nChange this ID by using the following command:> UNIQUEID DISK id=<any hex value of 8 characters>\r\n\nMake sure that the value has changed with the UNIQUEID DISK command.\n\nAssign the ID that you recorded previusly to the original system disk:> SELECT DISK <the original system disk number>\r\n> UNIQUEID DISK id=<the recorded disk ID>\r\n\nMake sure that the value has changed with the UNIQUEID DISK command.\n\nYou should now be able to exit the rescue mode.",
        "paragraphs": [],
        "cli_examples": [],
        "panel_examples": [],
        "url": "https://docs.virtuozzo.com/virtuozzo_hybrid_infrastructure_6_0_self_service_guide/rescuing-virtual-machines.html"
    },
    {
        "title": "Resizing volumes",
        "content": "Resizing volumes\nYou can change volume size only by increasing it. Volumes can be extended for both running (online resizing) and stopped (offline resizing) virtual machines. Online volume resizing allows users to avoid downtime and enables scaling VM\u00a0storage capacity on the fly without service interruption.\nLimitations\n\nYou cannot shrink volumes.\nDuring volume resizing, the file system inside the guest OS is not extended.\nIf you revert a volume to a snapshot that was taken before the volume extension, the new volume size will be retained.\n\nPrerequisites\n\nA volume is created, as described in Creating and deleting volumes.\n\nTo extend a volume\n\nOn the Volumes screen, click a volume.\n Click the pencil icon in the Size field. \nEnter the desired volume capacity, and then click the tick icon.\n\n After the volume is extended, you will need to re-partition the disk inside the guest OS to allocate the added disk space.",
        "paragraphs": [],
        "cli_examples": [],
        "panel_examples": [],
        "url": "https://docs.virtuozzo.com/virtuozzo_hybrid_infrastructure_6_0_self_service_guide/resizing-volumes.html"
    },
    {
        "title": "Shelving virtual machines",
        "content": "Shelving virtual machines\nYou can unbind a stopped VM from the node it is hosted on and release its reserved resources such as CPU and RAM. A shelved VM remains bootable and retains its configuration, including the IP addresses. \nPrerequisites\n\nVirtual machines are created, as described in Creating virtual machines.\n\nTo shelve a virtual machine\n\nClick the desired virtual machine.\nIf the VM is stopped, click Shelve on its right pane.\nIf the VM is running or suspended, click Shut down or Power off on its right pane, and then select Shelve virtual machine in the confirmation window.\n\nTo spawn a shelved VM on a node with enough resources to host it\n\nClick a shelved virtual machine.\nOn the VM right pane, click Unshelve.",
        "paragraphs": [],
        "cli_examples": [],
        "panel_examples": [],
        "url": "https://docs.virtuozzo.com/virtuozzo_hybrid_infrastructure_6_0_self_service_guide/shelving-virtual-machines.html"
    },
    {
        "title": "Setting a password inside virtual machines",
        "content": "Setting a password inside virtual machines\nInstead of an SSH key, you can use a password of the default administrator, to access a virtual machine created from a template.\nSetting a password inside virtual machines is supported for both Linux and Windows guest operating systems.\n\nIf you do not have this functionality available for a virtual machine, contact your system administrator.\n\nTo set a password inside a virtual machine\n\nOn the Virtual machines screen, click the required VM.\nOn the VM right pane, click Set password.\n\nIn the Set password window, specify a password for the default administrator login. The password must meet the following complexity requirements:\n\nIt must be at least 12 characters long.\n\nIt must contain characters from all of the following categories:\n\nUppercase Latin letters\nLowercase Latin letters\nBase 10 digits (0 through 9)\nNon-alphanumeric characters (special characters)\n\nAlternatively, click Generate to automatically generate a random password and copy it to the clipboard.\n\nSave this password. After closing this window, the password will be hidden and unavailable for recovery.\n\nClick Set to set the specified password for the default administrator account inside the VM.\n\nOnce the password is injected inside the virtual machine, you can use it to log in to the guest operating system with the default admin login. The Default admin login is displayed on the VM right pane in the VM properties.",
        "paragraphs": [],
        "cli_examples": [],
        "panel_examples": [],
        "url": "https://docs.virtuozzo.com/virtuozzo_hybrid_infrastructure_6_0_self_service_guide/setting-password-inside-vms.html"
    },
    {
        "title": "Restarting and deleting VPN connections",
        "content": "Restarting and deleting VPN connections\nYou can forcefully re-initiate a VPN connection by manually restarting it. When you delete a VPN connection, you also delete the IKE and IPsec policies and endpoint groups that were created during the VPN creation.\nPrerequisites\n\nA VPN connection is created, as described in Creating VPN connections.\n\nTo restart a VPN connection\n\nOn the VPN screen, click a VPN connection to restart.\nOn the connection right pane, click Restart.\nClick Restart VPN in the confirmation window.\n\nTo delete a VPN connection\n\nOn the VPN screen, click a VPN connection to delete.\nOn the connection right pane, click Delete.\nClick Delete in the confirmation window.",
        "paragraphs": [],
        "cli_examples": [],
        "panel_examples": [],
        "url": "https://docs.virtuozzo.com/virtuozzo_hybrid_infrastructure_6_0_self_service_guide/restarting-and-deleting-vpn-connections.html"
    },
    {
        "title": "Supported guest operating systems",
        "content": "Supported guest operating systems\nThe guest operating systems listed below have been tested and are supported in virtual machines.\nOnly the x64 architecture is supported.\n\nWindows\n\nVersion\nEdition\nCPU hot plug support\nRAM hot plug support\n\nWindows Server 2022\nEssentials\nNo\nNo\n\nStandard, Datacenter\nYes\nYes\n\nWindows Server 2019\nEssentials\nNo\nNo\n\nStandard, Datacenter\nYes\nYes\n\nWindows Server 2016\nEssentials\nNo\nNo\n\nStandard, Datacenter\nYes*\nYes\n\nWindows Server 2012 R2\nEssentials, Standard, Datacenter\nYes\nYes\n\nWindows Server 2012\nStandard, Datacenter\nYes\nYes\n\nWindows Server 2008 R2\nStandard, Datacenter\nNo\nNo\n\nWindows 10\nHome, Professional, Enterprise,\r\nEnterprise 2016 LTSB\nNo\nNo\n\nWindows 8.1\nHome, Professional, Enterprise\nNo\nNo\n\n* CPU hot plug does not work properly due to a Windows bug with a wrongly installed driver. To fix the issue, refer to this solution.\n\nLinux\n\nDistribution\nVersion\nCPU hot plug support\nRAM hot plug support\n\nRocky Linux\n9.x, 8.x\nYes\nYes\n\nAlmaLinux\n9.x, 8.x\nYes\nYes\n\nCentOS\n8.x, 7.x\nYes\nYes\n\n6.x\nNo\nNo\n\nRed Hat Enterprise Linux \n9.x, 8.x, 7.x\nYes\nYes\n\nDebian\n10.x, 9.x\nYes\nYes\n\nUbuntu\n22.04.x, 20.04.x, 18.04.x\nYes\nYes\n\n16.04.x\nNo\nNo\n\nOracle Linux\n7.3, 7.9\nYes\nYes",
        "paragraphs": [],
        "cli_examples": [],
        "panel_examples": [],
        "url": "https://docs.virtuozzo.com/virtuozzo_hybrid_infrastructure_6_0_self_service_guide/supported-guest-oses.html"
    },
    {
        "title": "Transferring volumes between projects",
        "content": "Transferring volumes between projects\nThere is no direct way to migrate a virtual machine between different projects. However, you can transfer the VM boot volume, and then create a new VM from it. You can transfer both boot and non-boot volumes to projects within different domains.\nLimitations\n\nYou can only transfer volumes with the \"Available\" status.\nTransferring volumes that have snapshots breaks the snapshots.\n\nPrerequisites\n\nAccess to the compute API depends on your provider's settings.  You need to obtain from your provider the instruction how to connect to the API.\nYou have login credentials for the source and destination projects.\nIf you want to transfer a boot volume that is attached to a VM, clone this volume first, as described in Cloning volumes.\nIf you want to transfer a non-boot volume that is attached to a VM, detach it first, as described in Attaching and detaching volumes.\n\nTo transfer a volume between two projects\r\n\r\n\n\nLog in to the source project by changing the environment variables to the project credentials. For example:export OS_PROJECT_DOMAIN_NAME=domain1\r\nexport OS_USER_DOMAIN_NAME=domain1\r\nexport OS_PROJECT_NAME=project1\r\nexport OS_USERNAME=user1\r\nexport OS_PASSWORD=password\n\nList all volumes within your project to find out the ID of the volume you want to transfer:# openstack --insecure volume list\r\n+--------------------------------------+-------------------+-----------+------+\r\n| ID                                   | Name              | Status    | Size |\r\n+--------------------------------------+-------------------+-----------+------+\r\n| 2c8386fa-331b-4ba8-9e4c-de690969a4c8 | win10/Boot volume | available |   64 |\r\n+--------------------------------------+-------------------+-----------+------+\n\nCreate a transfer request by specifying the ID of the chosen volume. For example:# openstack --insecure volume transfer request create c0d4cf0e-48e3-417d-b6fc-f1fb36571c5f\r\n+------------+--------------------------------------+\r\n| Field      | Value                                |\r\n+------------+--------------------------------------+\r\n| auth_key   | 75fcf37d56f40182                     |\r\n| created_at | 2022-04-27T09:00:11.776511           |\r\n| id         | b9b835a3-ed41-489a-9552-483fae33c549 |\r\n| name       | None                                 |\r\n| volume_id  | c0d4cf0e-48e3-417d-b6fc-f1fb36571c5f |\r\n+------------+--------------------------------------+\r\n\nSave the request id and auth-key from the command output, to accept the transfer in the other project.\n\nLog in to the destination project by changing the environment variables to the project credentials. For example:export OS_PROJECT_DOMAIN_NAME=domain1\r\nexport OS_USER_DOMAIN_NAME=domain1\r\nexport OS_PROJECT_NAME=project2\r\nexport OS_USERNAME=user2\r\nexport OS_PASSWORD=password\n\nAccept the transfer request by specifying the request ID and authorization key. For example:# openstack --insecure volume transfer request accept --auth-key 75fcf37d56f40182 \\\r\nb9b835a3-ed41-489a-9552-483fae33c549\n\nOnce the volume is moved to the other project, you can create a virtual machine from it, as described in Creating virtual machines.",
        "paragraphs": [],
        "cli_examples": [],
        "panel_examples": [],
        "url": "https://docs.virtuozzo.com/virtuozzo_hybrid_infrastructure_6_0_self_service_guide/transferring-volumes-between-projects.html"
    },
    {
        "title": "Statically provisioning persistent volumes",
        "content": "Statically provisioning persistent volumes\nYou can mount existing compute volumes to pods using static provisioning of persistent volumes.\nTo mount a compute volume\n\nIn the self-service panel, obtain the ID of the desired volume.\n\n\r\n                    Access the Kubernetes cluster via the dashboard. Click Kubernetes access for instructions.\r\n                \n\r\n                   On the Kubernetes dashboard, create a storage class, as described in Creating storage classes.\r\n                \n\nCreate a persistent volume. To do it, click + Create and specify the following YAML file:apiVersion: v1\r\nkind: PersistentVolume\r\nmetadata:\r\n  annotations:\r\n    pv.kubernetes.io/provisioned-by: cinder.csi.openstack.org\r\n  name: mypv\r\nspec:\r\n  accessModes:\r\n  - ReadWriteOnce\r\n  capacity:\r\n    storage: 10Gi\r\n  csi:\r\n    driver: cinder.csi.openstack.org\r\n    fsType: ext4\r\n    volumeHandle: c5850e42-4f9d-42b5-9bee-8809dedae424\r\n  persistentVolumeReclaimPolicy: Delete\r\n  storageClassName: default\nThis manifest specifies the persistent volume mypv from the storage class default that has 10 GiB of storage and access mode that allows it to be mounted in the read/write mode by a single node. The PV mypv uses the compute volume with the ID c5850e42-4f9d-42b5-9bee-8809dedae424 as backing storage.\n\nCreate a persistent volume claim. Before you define the PVC, make sure the PV is created and has the status \u00e2\u0080\u009cAvailable\u00e2\u0080\u009d. The existing PV must meet the claim\u00e2\u0080\u0099s requirements to storage size, access mode and storage class. Click + Create and specify the following YAML file:apiVersion: v1\r\nkind: PersistentVolumeClaim\r\nmetadata:\r\n  name: mypvc\r\nspec:\r\n  accessModes:\r\n  - ReadWriteOnce\r\n  resources:\r\n    requests:\r\n      storage: 10Gi\r\n  storageClassName: default\nOnce the persistent volume claim mypvc is created, the volume mypv is bound to it.\n\nCreate a pod and specify the PVC as its volume. Use the example from Step 4 in Dynamically provisioning persistent volumes.\nIn the self-service panel, the compute volume will be mounted to the virtual machine running the Kubernetes pod.",
        "paragraphs": [],
        "cli_examples": [],
        "panel_examples": [],
        "url": "https://docs.virtuozzo.com/virtuozzo_hybrid_infrastructure_6_0_self_service_guide/statically-provisioning-persistent-volumes.html"
    },
    {
        "title": "Troubleshooting virtual machines",
        "content": "Troubleshooting virtual machines\nIf a virtual machine fails to deploy\nReview the error message on the VM right pane. One of the possible root causes is that compute nodes lack free RAM or CPU resources to host the VM.\nIf a virtual machine is in the error state\n\nExamine the VM history in the History tab on the VM right pane. The event log will contain all of the VM management operations performed by users in the user or command-line interface. You can expand each log entry to view operation details by clicking the arrow icon next to it. The details include the operation name, date and time, status, initiator, and request ID.\n\nIf a virtual machine is stuck in a failed or transitional state\n\n Reset the VM to its last stable state: active, shut down or shelved:\n\n Click the stuck VM.\nOn the VM right pane, click Reset state.\n\nIf a virtual machine fails to boot\n\nExamine the VM console log by clicking Download console log on the VM right pane. The log will contain log messages only if logging is enabled inside the VM (refer to Enabling logging for virtual machines).",
        "paragraphs": [],
        "cli_examples": [],
        "panel_examples": [],
        "url": "https://docs.virtuozzo.com/virtuozzo_hybrid_infrastructure_6_0_self_service_guide/troubleshooting-virtual-machines.html"
    },
    {
        "title": "Uninstalling guest tools",
        "content": "Uninstalling guest tools\nIf you find out that the guest tools are incompatible with some software inside a virtual machine, you can uninstall them by doing the following:\n\nInside a Windows VM:\n\nRemove the QEMU device drivers from the device manager.\n\nDo not remove the VirtIO/SCSI hard disk driver and NetKVM network driver. Without the former, the VM will not boot; without the latter, the VM will lose network connectivity.\n\nUninstall the QEMU guest agent and guest tools from the list of installed applications.\n\nStop and delete Guest Tools Monitor:> sc stop VzGuestToolsMonitor\r\n> sc delete VzGuestToolsMonitor\r\n\n\nUnregister Guest Tools Monitor from Event Log:> reg delete HKLM\\SYSTEM\\CurrentControlSet\\services\\eventlog\\Application\\\\\r\nVzGuestToolsMonitor\r\n\n\nDelete the autorun registry key for RebootNotifier:> reg delete HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run /v \\\r\nVzRebootNotifier\r\n\n\nDelete the C:\\Program Files\\Qemu-ga\\ directory.\nIf VzGuestToolsMonitor.exe is locked, close all the Event Viewer windows. If it remains locked, restart the eventlog service:> sc stop eventlog\r\n> sc start eventlog\r\n\n\nAfter removing the guest tools, restart the virtual machine.\n\nInside a Linux VM:\n\nRemove the packages:\n\nOn RPM-based systems (CentOS and other):# yum remove dkms-vzvirtio_balloon prl_nettool qemu-guest-agent-vz \\vz-guest-udev\r\n\n\nOn DEB-based systems (Debian and Ubuntu):# apt-get remove vzvirtio-balloon-dkms prl-nettool qemu-guest-agent-vz \\vz-guest-udev\r\n\nIf any of the packages listed above are not installed on your system, the command will fail. In this case, exclude these packages from the command and run it again.\n\nRemove the files:# rm -f /usr/bin/prl_backup /usr/share/qemu-ga/VERSION \\/usr/bin/install-tools \\\r\n/etc/udev/rules.d/90-guest_iso.rules /usr/local/bin/fstrim-static \\/etc/cron.weekly/fstrim\r\n\n\nReload the udev rules:# udevadm control --reload\r\n\n\nAfter removing guest tools, restart the virtual machine.",
        "paragraphs": [],
        "cli_examples": [],
        "panel_examples": [],
        "url": "https://docs.virtuozzo.com/virtuozzo_hybrid_infrastructure_6_0_self_service_guide/uninstalling-guest-tools.html"
    },
    {
        "title": "Viewing and editing project quotas",
        "content": "Viewing and editing project quotas\nEach project is allocated a certain amount of compute resources by means of quotas. Any domain administrator can view project quotas on the  project details screen. If granted the required permission, a domain administrator can also edit project quotas.\nPrerequisites\n\nA domain administrator must have the Project and quota management permission granted, to be able to edit project quotas.\n\nTo view quotas of a project\n\nSelect the domain in the drop-down list in the top right corner.\nOpen the Projects screen, click the desired project in the list, and then switch to the Quotas tab.\n\nTo edit quotas of a project\n\nSelect the domain in the drop-down list in the top right corner.\nOn the Projects screen, click the ellipsis icon next to the project, and then click Edit quotas.\nMake the required changes, and then click Save. ",
        "paragraphs": [],
        "cli_examples": [],
        "panel_examples": [],
        "url": "https://docs.virtuozzo.com/virtuozzo_hybrid_infrastructure_6_0_self_service_guide/viewing-and-editing-project-quotas.html"
    },
    {
        "title": "Updating Kubernetes clusters",
        "content": "Updating Kubernetes clusters\nWhen a new Kubernetes version becomes available, you can update your Kubernetes cluster to it. An update is non-disruptive for Kubernetes worker nodes, which means that these nodes are updated one by one, with the data availability unaffected. The Kubernetes API will be unavailable during an update, unless high availability is enabled for the master node.\nStarting from a Kubernetes cluster update to version 1.24.3, Kubernetes virtual machines are re-created based on a newer Fedora CoreOS image. Such a rolling update is used to preserve the cluster data. Before starting the update, you need to make sure that the compute cluster has enough resources and quotas for at least one extra VM of the largest flavor used by your Kubernetes cluster. If the master and worker node flavors differ, then you should take into account the largest one of them.\nLimitations\n\nYou cannot update Kubernetes clusters with version 1.15.x to newer versions.\nYou cannot manage Kubernetes clusters in the self-service panel during an update.\n\nPrerequisites\n\nA Kubernetes cluster is created, as described in Creating and deleting Kubernetes clusters.\n\nTo update a Kubernetes cluster\n\nClick a Kubernetes cluster that is marked with the Update available tag.\nOn the Kubernetes cluster pane, click Update in the Kubernetes version field.\nIn the Update window, select a Kubernetes version to update to and follow the provided link to read about API resources that are deprecated or obsoleted in the selected version. Then, click Update.\n\nIn the confirmation window, click Confirm. The update process will start.\n\nDo not manage Kubernetes virtual machines during the update as it may lead to disruption of the update process and cluster inoperability.",
        "paragraphs": [],
        "cli_examples": [],
        "panel_examples": [],
        "url": "https://docs.virtuozzo.com/virtuozzo_hybrid_infrastructure_6_0_self_service_guide/updating-kubernetes-clusters.html"
    },
    {
        "title": "Using persistent volumes for Kubernetes pods",
        "content": "Using persistent volumes for Kubernetes pods\nKubernetes allows using compute volumes as persistent storage for pods. Persistent volumes (PV) exist independently of pods, meaning that such a volume persists after the pod it is mounted to is deleted. This PV can be mounted to other pods for accessing data stored on it. You can provision PVs dynamically, without having to create them manually, or statically, using volumes that exist in the compute cluster.",
        "paragraphs": [],
        "cli_examples": [],
        "panel_examples": [],
        "url": "https://docs.virtuozzo.com/virtuozzo_hybrid_infrastructure_6_0_self_service_guide/using-persistent-volumes-for-kubernetes-pods.html"
    },
    {
        "title": "Uploading images",
        "content": "Uploading images\nTo upload an image\n\n\r\n                On the Images screen, click Add image.\n\nIn the Add image window, do the following:\n\n\r\n                        Click Browse and select a file in one of the supported formats: .iso, .img, .qcow2, .raw.\r\n                    \n\r\n                        Specify an image name to be shown in the admin panel.\r\n                    \n\nSelect the correct OS type from the drop-down list.\n\nThe OS type affects VM parameters such as hypervisor settings. VMs created from an image with an incorrect OS type may not work correctly, for example, they may crash.\n\nIf you have chosen an image in the QCOW2, RAW, or IMG format, select the UEFI boot check box, to mark the image as UEFI bootable. This option cannot be configured after the image is uploaded.\n\n\r\n                Click Add to start uploading the image. The upload progress will be shown in the bottom right corner.\r\n            \n\nYou can hide the pop-up window without interrupting the upload process. The upload progress will be available in the notification center.",
        "paragraphs": [],
        "cli_examples": [],
        "panel_examples": [],
        "url": "https://docs.virtuozzo.com/virtuozzo_hybrid_infrastructure_6_0_self_service_guide/uploading-images.html"
    }
]